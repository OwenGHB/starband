## Makefile for Angband using the lcc32 compiler### Basic defines (change the file locations as appropriate).#LCC_PATH =	D:\Applications\toolsLINK	=	$(LCC_PATH)\bin\lcclnk.exeCC		=	$(LCC_PATH)\bin\lcc.exeRC		=	$(LCC_PATH)\bin\lrc.exeLIBS	=	$(LCC_PATH)\lib\winmm.libINCS	=	$(LCC_PATH)\includeCFLAGS	=	-I$(INCS) -DHAS_STRICMP -DUSE_TRANSPARENCYOBJS=\	z-virt.obj \	z-util.obj \	z-term.obj \	z-rand.obj \	z-form.obj \	xtra2.obj \	xtra1.obj \	wizard2.obj \	wizard1.obj \	variable.obj \	util.obj \	tables.obj \	store.obj \	spells3.obj \	spells2.obj \	spells1.obj \	skills.obj \	save.obj \	readdib.obj \	quest.obj \	pet.obj \	object2.obj \	object1.obj \	mutation.obj \	mspells1.obj \	monster2.obj \	monster1.obj \	monmove.obj \	monattk.obj \	main-win.obj \	load2.obj \	level.obj \	init2.obj \	init1.obj \	generate.obj \	files.obj \	effects.obj \	dungeon.obj \	cmd-util.obj \	cmd-misc.obj \	cmd-know.obj \	cmd-item.obj \	cmd-book.obj \	cmd-attk.obj \	classpower.obj \	cave.obj \	birth.obj \	angband.res## Targets#angband.exe:	$(OBJS) Makefile.lcc	$(LINK) -s -subsystem windows -o angband.exe $(OBJS) $(LIBS)# Build Z-VIRT.CZ-VIRT_C=\	z-virt.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\	z-util.h\z-virt.obj: $(Z-VIRT_C) z-virt.c	$(CC) -c $(CFLAGS) z-virt.c# Build Z-UTIL.CZ-UTIL_C=\	z-util.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\z-util.obj: $(Z-UTIL_C) z-util.c	$(CC) -c $(CFLAGS) z-util.c# Build Z-TERM.CZ-TERM_C=\	angband.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\	z-util.h\	z-virt.h\	z-form.h\	z-rand.h\	z-term.h\	config.h\	defines.h\	types.h\	externs.h\z-term.obj: $(Z-TERM_C) z-term.c	$(CC) -c $(CFLAGS) z-term.c# Build Z-RAND.CZ-RAND_C=\	z-rand.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\z-rand.obj: $(Z-RAND_C) z-rand.c	$(CC) -c $(CFLAGS) z-rand.c# Build Z-FORM.CZ-FORM_C=\	z-form.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\	z-util.h\	z-virt.h\z-form.obj: $(Z-FORM_C) z-form.c	$(CC) -c $(CFLAGS) z-form.c# Build READDIB.CREADDIB_C=\	readdib.h\readdib.obj: $(READDIB_C) readdib.c	$(CC) -c $(CFLAGS) readdib.cangband.res: angband.rc	$(RC) -I$(INCS) angband.rc# Build WIZARD2.CHEADERS=\	angband.h\	h-basic.h\	h-config.h\	h-system.h\	h-type.h\	h-define.h\	z-util.h\	z-virt.h\	z-form.h\	z-rand.h\	z-term.h\	config.h\	defines.h\	types.h\	externs.h\*.obj: $(HEADERS) *.c	$(CC) -c $(CFLAGS) *.c