/* File: defines.h */

/*
 * Copyright (c) 1997 Ben Harrison, James E. Wilson, Robert A. Koeneke
 *
 * This software may be copied and distributed for educational, research,
 * and not for profit purposes provided that this copyright and statement
 * are included in all such copies.  Other copyrights may also apply.
 *
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */

/*******************************
 * Name of the version/variant *
 *******************************/ 
#define VERSION_NAME "Steamband"

/*
 * Current version string
 */
#define VERSION_STRING	"0.4.1"

/*
 * Current version numbers
 */
#define VERSION_MAJOR	0
#define VERSION_MINOR	4
#define VERSION_PATCH	1
#define VERSION_EXTRA	0


/*
 * Number of grids in each block (vertically)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_HGT		11

/*
 * Number of grids in each block (horizontally)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_WID		11

/*
 * Number of grids in each panel (vertically)
 * Must be a multiple of BLOCK_HGT
 */
#define PANEL_HGT		11

/*
 * Number of grids in each panel (horizontally)
 * Must be a multiple of BLOCK_WID
 */
#define PANEL_WID		33

/*
 * Number of grids in each screen (vertically)
 * Must be a multiple of PANEL_HGT (at least 2x)
 */
#define SCREEN_HGT		(Term->hgt - ROW_MAP - 1)

/*
 * Number of grids in each screen (horizontally)
 * Must be a multiple of PANEL_WID (at least 2x)
 */
#define SCREEN_WID		(Term->wid - COL_MAP - 1)

/*
 * Number of grids in each dungeon (horizontally)
 * Must be a multiple of SCREEN_HGT
 * Must be less or equal to 256
 */
#define DUNGEON_HGT		66

/*
 * Number of grids in each dungeon (vertically)
 * Must be a multiple of SCREEN_WID
 * Must be less or equal to 256
 */
#define DUNGEON_WID		198

/*
 * Number of grids in the town screen 
 * These must be set for proper town lighting
 */
#define TOWN_WID			66
#define TOWN_HGT			22

/*
 * Maximum amount of Angband windows.
 */
#define ANGBAND_TERM_MAX	8

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES		10

/*
 * Store index definitions (see "store.c", etc)
 */
#define STORE_GENERAL	0
#define STORE_CLOTHING	1
#define STORE_GUN		2
#define STORE_MACHINE	3
#define STORE_ALCHEMY	4
#define STORE_MAGIC		5
#define STORE_B_MARKET	6
#define STORE_HOME		7
#define STORE_LIBRARY	8
#define STORE_WETWARE	9


/*
 * Maximum number of player "sex" types (see "table.c", etc)
 */
#define MAX_SEXES			2

/*
 * Maximum amount of starting equipment
 */
#define MAX_START_ITEMS		4

/*
 * Hack -- Maximum number of quests
 */
#define MAX_Q_IDX			4

/*
 * Hack -- Tab Columns for util.c
 */
#define TAB_COLUMNS			8

/*
 * Maximum spells per book.
 */
#define MAX_BOOK_SPELLS		10

/* Mutations -- Needs to be changed to phernology */
/* "Activatable" mutations must be in MUT1_* or MUT2_* */
#define MUT1_FIRE_BOLT				0x00000001L
#define MUT1_FIRE_BALL				0x00000002L
#define MUT1_FIRE_BREATH			0x00000004L
#define MUT1_FIRE_STORM				0x00000008L
#define MUT1_EARTH_BOLT				0x00000010L
#define MUT1_EARTH_SHOWER			0x00000020L
#define MUT1_BIRDS_VIEW				0x00000040L
#define MUT1_CYCLONE				0x00000080L
#define MUT1_RUSHING_STREAMS		0x00000100L
#define MUT1_BRIBERY				0x00000200L
#define MUT1_EVASION				0x00000400L
#define MUT1_SPRING					0x00000800L
#define MUT1_BURST					0x00001000L
#define MUT1_XXX14					0x00002000L
#define MUT1_XXX15					0x00004000L
#define MUT1_XXX16					0x00008000L
#define MUT1_XXX17					0x00010000L
#define MUT1_XXX18					0x00020000L
#define MUT1_XXX19					0x00040000L
#define MUT1_XXX20					0x00080000L
#define MUT1_XXX21					0x00100000L
#define MUT1_XXX22					0x00200000L
#define MUT1_XXX23					0x00400000L
#define MUT1_XXX24					0x00800000L
#define MUT1_XXX25					0x01000000L
#define MUT1_XXX26					0x02000000L
#define MUT1_XXX27					0x04000000L
#define MUT1_XXX28					0x08000000L
#define MUT1_XXX29					0x10000000L
#define MUT1_XXX30					0x20000000L
#define MUT1_XXX31					0x40000000L
#define MUT1_XXX32					0x80000000L

#define MUT2_XXX1					0x00000001L
#define MUT2_XXX2					0x00000002L
#define MUT2_XXX3					0x00000004L
#define MUT2_XXX4					0x00000008L
#define MUT2_XXX5					0x00000010L
#define MUT2_XXX6					0x00000020L
#define MUT2_XXX7					0x00000040L
#define MUT2_XXX8					0x00000080L
#define MUT2_XXX9					0x00000100L
#define MUT2_XXX10					0x00000200L
#define MUT2_XXX11					0x00000400L
#define MUT2_XXX12					0x00000800L
#define MUT2_XXX13					0x00001000L
#define MUT2_XXX14					0x00002000L
#define MUT2_XXX15					0x00004000L
#define MUT2_XXX16					0x00008000L
#define MUT2_XXX17					0x00010000L
#define MUT2_XXX18					0x00020000L
#define MUT2_XXX19					0x00040000L
#define MUT2_XXX20					0x00080000L
#define MUT2_XXX21					0x00100000L
#define MUT2_XXX22					0x00200000L
#define MUT2_XXX23					0x00400000L
#define MUT2_XXX24					0x00800000L
#define MUT2_XXX25					0x01000000L
#define MUT2_XXX26					0x02000000L
#define MUT2_XXX27					0x04000000L
#define MUT2_XXX28					0x08000000L
#define MUT2_XXX29					0x10000000L
#define MUT2_XXX30					0x20000000L
#define MUT2_XXX31					0x40000000L
#define MUT2_XXX32					0x80000000L


/* Randomly activating mutations must be MUT3_* */
#define MUT3_COWARDICE				0x00000001L
#define MUT3_RTELEPORT				0x00000002L
#define MUT3_HALLU					0x00000004L 
#define MUT3_WOUND					0x00000008L
#define MUT3_POLY_WOUND				0x00000010L
#define MUT3_WASTING				0x00000020L
#define MUT3_NAUSEA					0x00000040L
#define MUT3_DISARM					0x00000080L
#define MUT3_HVY_WOUND				0x00000100L
#define MUT3_XXX10					0x00000200L
#define MUT3_XXX11					0x00000400L
#define MUT3_XXX12					0x00000800L
#define MUT3_XXX13					0x00001000L
#define MUT3_XXX14					0x00002000L
#define MUT3_XXX15					0x00004000L
#define MUT3_XXX16					0x00008000L
#define MUT3_XXX17					0x00010000L
#define MUT3_XXX18					0x00020000L
#define MUT3_XXX19					0x00040000L
#define MUT3_XXX20					0x00080000L
#define MUT3_XXX21					0x00100000L
#define MUT3_XXX22					0x00200000L
#define MUT3_XXX23					0x00400000L
#define MUT3_XXX24					0x00800000L
#define MUT3_XXX25					0x01000000L
#define MUT3_XXX26					0x02000000L
#define MUT3_XXX27					0x04000000L
#define MUT3_XXX28					0x08000000L
#define MUT3_XXX29					0x10000000L
#define MUT3_ATT_DEMON				0x20000000L
#define MUT3_ATT_ANIMAL				0x40000000L
#define MUT3_ATT_ELEMENTAL			0x80000000L

#define MUT4_SCOR_TAIL				0x00000001L
#define MUT4_HORNS					0x00000002L
#define MUT4_BEAK					0x00000004L
#define MUT4_TUSKS					0x00000008L
#define MUT4_CLAWS					0x00000010L
#define MUT4_TENTACLES				0x00000020L
#define MUT4_ALPHA_SPURS			0x00000040L
#define MUT4_BETA_SPURS				0x00000080L
#define MUT4_GAMMA_SPURS			0x00000100L
#define MUT4_DELTA_SPURS			0x00000200L
#define MUT4_XXX11					0x00000400L
#define MUT4_XXX12					0x00000800L
#define MUT4_XXX13					0x00001000L
#define MUT4_XXX14					0x00002000L
#define MUT4_XXX15					0x00004000L
#define MUT4_XXX16					0x00008000L
#define MUT4_XXX17					0x00010000L
#define MUT4_XXX18					0x00020000L
#define MUT4_XXX19					0x00040000L
#define MUT4_XXX20					0x00080000L
#define MUT4_XXX21					0x00100000L
#define MUT4_XXX22					0x00200000L
#define MUT4_XXX23					0x00400000L
#define MUT4_XXX24					0x00800000L
#define MUT4_XXX25					0x01000000L
#define MUT4_XXX26					0x02000000L
#define MUT4_XXX27					0x04000000L
#define MUT4_BERS_RAGE				0x08000000L
#define MUT4_WEIRD_MIND				0x10000000L
#define MUT4_WARNING				0x20000000L
#define MUT4_INVULN					0x40000000L
#define MUT4_WRAITH					0x80000000L


/* Other mutations will be mainly in MUT5_* */
#define MUT5_HYPER_STR				0x00000001L
#define MUT5_PUNY					0x00000002L
#define MUT5_HYPER_INT				0x00000004L
#define MUT5_MORONIC				0x00000008L
#define MUT5_RESILIENT				0x00000010L
#define MUT5_XTRA_FAT				0x00000020L
#define MUT5_ALBINO					0x00000040L
#define MUT5_FLESH_ROT				0x00000080L
#define MUT5_SILLY_VOI				0x00000100L
#define MUT5_BLANK_FAC				0x00000200L
#define MUT5_ILL_NORM				0x00000400L
#define MUT5_XTRA_EYES				0x00000800L
#define MUT5_MAGIC_RES				0x00001000L
#define MUT5_XTRA_NOIS				0x00002000L
#define MUT5_INFRAVIS				0x00004000L
#define MUT5_XTRA_LEGS				0x00008000L
#define MUT5_SHORT_LEG				0x00010000L
#define MUT5_ELEC_TOUC				0x00020000L
#define MUT5_FIRE_BODY				0x00040000L
#define MUT5_WART_SKIN				0x00080000L
#define MUT5_SCALES					0x00100000L
#define MUT5_IRON_SKIN				0x00200000L
#define MUT5_WINGS					0x00400000L
#define MUT5_FEARLESS				0x00800000L
#define MUT5_REGEN					0x01000000L
#define MUT5_ESP					0x02000000L
#define MUT5_TWISTED				0x04000000L
#define MUT5_SPINES					0x08000000L
#define MUT5_LIMBER					0x10000000L
#define MUT5_ARTHRITIS				0x20000000L
#define MUT5_GLOW					0x40000000L
#define MUT5_XXX32					0x80000000L


#define MUT6_ALPHA_EYES				0x00000001L
#define MUT6_BETA_EYES				0x00000002L
#define MUT6_GAMMA_EYES				0x00000004L
#define MUT6_DELTA_EYES				0x00000008L
#define MUT6_ALPHA_REFLEX			0x00000010L
#define MUT6_BETA_REFLEX			0x00000020L
#define MUT6_GAMMA_REFLEX			0x00000040L
#define MUT6_DELTA_REFLEX			0x00000080L
#define MUT6_ALPHA_PLATING			0x00000100L
#define MUT6_BETA_PLATING			0x00000200L
#define MUT6_GAMMA_PLATING			0x00000400L
#define MUT6_DELTA_PLATING			0x00000800L
#define MUT6_ALPHA_CORE				0x00001000L
#define MUT6_BETA_CORE				0x00002000L
#define MUT6_GAMMA_CORE				0x00004000L
#define MUT6_DELTA_CORE				0x00008000L
#define MUT6_XXX17					0x00010000L
#define MUT6_XXX18					0x00020000L
#define MUT6_XXX19					0x00040000L
#define MUT6_XXX20					0x00080000L
#define MUT6_XXX21					0x00100000L
#define MUT6_XXX22					0x00200000L
#define MUT6_XXX23					0x00400000L
#define MUT6_XXX24					0x00800000L
#define MUT6_XXX25					0x01000000L
#define MUT6_XXX26					0x02000000L
#define MUT6_XXX27					0x04000000L
#define MUT6_XXX28					0x08000000L
#define MUT6_XXX29					0x10000000L
#define MUT6_XXX30					0x20000000L
#define MUT6_XXX31					0x40000000L
#define MUT6_XXX32					0x80000000L


/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES	100

/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#define MAX_DEPTH	128

/* This is for item generation code, since it'll be awhile before */
/* I can make the max depth changeover */
#define MAX_ITEM_GEN_DEPTH  60

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX 1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * Note that we must be as large as "VIEW_MAX" for proper functioning
 * of the "update_view()" function, and we must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX 1536


#ifdef MONSTER_FLOW /* part of 4GAI by LM, and BR */
/*
 * Maximum distance from the character to store flow (noise) information
 */
#define NOISE_STRENGTH   45

/*
 * Character turns it takes for smell to totally dissipate
 */
#define SMELL_STRENGTH   50
#endif  /* Monster Flow */


/*
 * OPTION: Maximum number of macros (see "util.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX	256

/*
 * OPTION: Maximum number of "quarks" (see "util.c")
 * Default: assume at most 512 different inscriptions are used
 */
#define QUARK_MAX	512

/*
 * OPTION: Maximum number of messages to remember (see "util.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX	2048

/*
 * OPTION: Maximum space for the message text buffer (see "util.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF	32768

/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR		255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT		32767

/*
 * Store constants
 */
#define STORE_INVEN_MAX	24		/* Max number of discrete objs in inven */
#define STORE_CHOICES	32		/* Number of items to choose stock from */
#define STORE_OBJ_LEVEL	5		/* Magic Level for normal stores */
#define STORE_TURNOVER	9		/* Normal shop turnover, per day */
#define STORE_MIN_KEEP	6		/* Min slots to "always" keep full */
#define STORE_MAX_KEEP	18		/* Max slots to "always" keep full */
#define STORE_SHUFFLE	25		/* 1/Chance (per day) of an owner changing */
#define STORE_TURNS		400		/* Number of turns between turnovers */

/*
 * Misc constants
 */
#define TOWN_DAWN		10000	/* Number of turns from dawn to dawn XXX */
#define BREAK_GLYPH		550		/* Rune of protection resistance */
#define BTH_PLUS_ADJ	3		/* Adjust BTH per plus-to-hit */
#define MON_MULT_ADJ	8		/* High value slows multiplication */
#define MON_SUMMON_ADJ	2		/* Adjust level of summoned creatures */
#define MON_DRAIN_LIFE	2		/* Percent of player exp drained per hit */
#define USE_DEVICE		3		/* x> Harder devices x< Easier devices */
#define QUEST_TURNS		1200	/* Number of turns between quest failure checks */

/*
 * Skill constants - Skill system by Courtney Campbell
 * Contact valis@oook.cz for comments.
 */

/*
 * Skill display constants 
 */
#define SKILL_ROW_START		11
#define SKILL_ROW_END		21

/*
 * Skill Layout constants 
 */
#define COL_ONE				1
#define COL_TWO				27
#define COL_THREE			53

/*
 * Total number of skills
 */
#define N_SKILLS 225

/*
 * Max rank of each skill - note that raising this value can 
 * have extremely unbalanceing effects that can certainly 
 * cause the game to crash! (such as players being able to 
 * cast spells without using any energy, and divide by 0 errors)
 */
#define SK_MAX_POWER 20

/*
 * This is a base mutiplier of how much it costs to raise
 * a skills maximum in the home.
 */
 
#define SKILL_INCREASE_CONSTANT 	750 
/*
 * Skills constants
 */
#define SK_DISARM_GOOD				0
#define SK_DISARM_NORM				1
#define SK_DISARM_POOR				2
#define SK_DISABLE_MACHINE			3
#define SK_SAVETH_BNUS				4

#define SK_ASSASSINATION			5
#define SK_THEFT					6
#define SK_MASTER_THEFT				7
#define SK_STEALTH_GOOD				8
#define SK_STEALTH_NORM				9

#define SK_STEALTH_POOR				10
#define SK_SUPERSTEALTH				11
#define SK_SEARCHING_GOOD			12
#define SK_SEARCHING_NORM			13
#define SK_SEARCHING_POOR			14

#define SK_TRAILBLAZER				15
#define SK_SPOT_WEAKNESS			16
#define SK_KEEN_EYES				17
#define SK_SENSE_DUNGEON			18
#define SK_DUNGEON_LORE				19

#define SK_PAIN_TOLERANCE			20
#define SK_PERILOUS_SORCERY			21
#define SK_LUCK						22
#define SK_ERUDITE					23
#define SK_DEFAULT					24
/* end of block one */

/* Racial Skills! */
/* Start of block 2 */
#define SK_BRITISH					25
#define SK_BRITISH2					26
#define SK_ASIATIC					27
#define SK_ASIATIC2					28
#define SK_AMERICAN					29

#define SK_AMERICAN2				30
#define SK_AFRICAN					31
#define SK_AFRICAN2					32
#define SK_CUISINE					33
#define SK_FRENCH2					34

#define SK_SPANISH					35
#define SK_SPANISH2					36
#define SK_RANSACK					37
#define SK_GERMAN2					38
#define SK_RUSSIAN					39

#define SK_RUSSIAN2 				40
#define SK_FINNISH					41
#define SK_FINNISH2					42
#define SK_ARABIC					43
#define SK_ARABIC2					44

#define SK_STONELORE				45
#define SK_DWARF2					46
#define SK_FAE_PATH					47
#define SK_BROWNIE2					48
#define SK_DAOINESIDHE1				49
/* end of block 2 */

/* Start of block 3 */
#define SK_DAOINESIDHE2				50
#define SK_SEELIEFAE1				51
#define SK_SEELIEFAE2				52
#define SK_UNSEELIEFAE1				53
#define SK_UNSEELIEFAE2				54

#define SK_SYSTEMS_CYPHER			55
#define SK_ONSLAUGHT_CYPHER 		56
#define SK_AEGIS_CYPHER				57
#define SK_UTILITY_CYPHER			58
#define SK_ROCKETRY					59

#define SK_DJINN1					60
#define SK_DJINN2					61
#define SK_DJINN3					62
#define SK_DEMON_ATTUNE				63
#define SK_DARK_CHARM				64

#define SK_RAKSHASA3				65
#define SK_ROCK_TOSS				66
#define SK_BZRK_STR					67
#define SK_TROLL					68
#define SK_ETHERIC_ATTUNE			69

#define SK_GHOST2					70
#define SK_COWARDICE				71
#define SK_OLD1						72
#define SK_OLD12					73
#define SK_OLD13					74
/* end of block three */

/* Combat Skills! */
/* start of block four */
#define SK_TOHIT					75
#define SK_INTER_COMBAT				76
#define SK_ADV_COMBAT				77
#define SK_MASTER_COMBAT			78
#define SK_POWER_STRIKE				79

#define SK_CRIT_STRIKE				80
#define SK_ACC_STRIKE				81
#define SK_VICIOUS_STRIKE			82
#define SK_SWIFT_BLOW				83
#define SK_WEAPON_FINESSE			84

#define SK_TOHIT_MARTIAL			85
#define SK_INTER_MARTIAL			86
#define SK_ADV_MARTIAL				87
#define SK_TOHIT_SHOOTING			88
#define SK_INTER_SHOOTING			89

#define SK_ADV_SHOOTING				90
#define SK_MASTER_SHOOTING			91
#define SK_PISTOL					92
#define SK_RIFLE					93
#define SK_SHOTGUN					94

#define SK_CRIT_SHOT				95
#define SK_ACC_SHOT					96
#define SK_VICIOUS_SHOT				97
#define SK_SWIFT_SHOT				98
#define SK_TOHIT_THROWING			99
/* end of block four */

/* start of block five */
#define SK_ADV_THROWING				100
#define SK_MASTER_THROWING			101
#define SK_POWER_THROW				102
#define SK_CRIT_THROW				103
#define SK_ACC_THROW				104

#define SK_HAFTED					105
#define SK_POLEARM					106
#define SK_SWORD					107
#define SK_DAGGER					108
#define SK_AXES						109

#define SK_BLUNT					110
#define SK_HAFTED_MASTER			111
#define SK_POLEARM_MASTER			112
#define SK_SWORD_MASTER				113
#define SK_DAGGER_MASTER			114

#define SK_AXES_MASTER				115
#define SK_BLUNT_MASTER				116
#define SK_ACROBATICS				117
#define SK_MARTIAL_DEFENSE			118
#define SK_MARTIAL_DEFENSE_II		119

#define SK_MARTIAL_SPEED			120
#define SK_MUTIPLE_THROW			121 /* Non functioning */
#define SK_FAST_THROW				122
#define SK_DIRTY_FIGHTING			123
#define SK_XXX5						124
/* End of block five */

/* Class powers and spells */
/* Start block six - Class Powers */
#define SK_OFFICER					125
#define SK_OFFICER2					126
#define SK_PRESENCE					127
#define SK_AESTHETE					128
#define SK_AESTHETE2				129

#define SK_EXPLORER					130
#define SK_TELEPATHY				131
#define SK_CLAIRSENTIENCE			132
#define SK_PSYCHOMETABOLISM			133
#define SK_MESMERIC_WILL			134

#define SK_COMBATTECHNIQUES			135
#define SK_ELITEMANEUVERS			136
#define SK_FLORAL					137
#define SK_FAUNA					138
#define SK_ELEMENTAL				139

#define SK_NINJAMAGIC				140
#define SK_NINJASTEALTH				141
#define SK_NINJUTSU					142
#define SK_HEBREW					143
#define SK_QABALA					144

#define SK_GEMATRIA					145
#define SK_BRIBERY					146
#define SK_ART_APPRECIATION			147
#define SK_BATTLE_ENDURANCE	 		148 /* regen + wp */
#define SK_EARTH_HEARTH				149
/* end of block six */

/* Start of block seven --Spells and lore */
/* refrence cmd-book for more information */ 
#define SK_LATIN					150 
#define SK_OCCULT					151 
#define SK_ADV_OCCULT				152
#define SK_CTHULHU_MYTHOS			153
#define SK_RITUAL_MAGIC				154 

#define SK_THAUMIC_ENERGY			155
#define SK_ADV_THAUMIC_ENERGY		156
#define SK_THELMA					157
#define SK_SPIRITUALITY				158 
#define SK_PRAYER					159

#define SK_DEVOTION					160
#define SK_LESSER_WARD				161
#define SK_GREATER_WARD				162
#define SK_TMPR_WILL				163
#define SK_HARD_WILL				164

#define SK_IRON_WILL				165
#define SK_FAST_CAST				166
#define SK_SPIRIT_INFUSION			167
#define SK_MENTAL_RESISTANCE		168
#define SK_SPIRIT_SHIELD			169

#define SK_SPIRIT_HEALING			170
#define SK_SPIRIT_SPEED				171
#define SK_ANATOMY					172
#define SK_SABOTAGE					173
#define SK_THEOLOGY					174
/* End of Block 7 */

/* Start of Block 8 -- Device skills */
#define SK_GADGETEER				175
#define SK_UTILITY_BANDOLIER		176
#define SK_DETECTIVES_KIT			177
#define SK_CLOCKWORK_CHASSIS		178
#define SK_CLOCKWORK_CARBINE		179

#define SK_VELOCIPEDE				180
#define SK_ANALYTIC_ENGINE			181
#define SK_XXX48					182
#define SK_XXX49					183
#define SK_XXX50					184

#define SK_XXX51					185
#define SK_XXX52					186
#define SK_XXX53					187
#define SK_XXX54					188
#define SK_PYROKINETICS				189

#define SK_DEVICE_GOOD				190
#define SK_DEVICE_NORM				191
#define SK_DEVICE_POOR				192
#define SK_ADV_DEVICE				193 /* Increases success rate / allows new skills */
#define SK_SPEED_DEVICE				194 /* Allows faster use (< energy) */

#define SK_EFF_DEVICE				195 /* reduces Recharge time */
#define SK_POW_DEVICE				196 /* Increases Damage of device */
#define SK_POW2_DEVICE				197 /* Further Damage increase */
#define SK_HEAL_DEVICE				198 /* Increases positive effect of device */
#define SK_XXX65					199
/* end of block 8 */

/* Start of block 9 -- Defensive, and other skill oddities */
#define SK_FIRE_LORE				200
#define SK_FIRE_MASTERY				201
#define SK_WIND_LORE				202
#define SK_WIND_MASTERY				203
#define SK_WATER_LORE				204

#define SK_WATER_MASTERY			205
#define SK_EARTH_LORE				206
#define SK_EARTH_MASTERY			207
#define SK_ELEMENTAL_RESISTANCE		208
#define SK_BASIC_SURVIVAL			209

#define SK_TOUGHNESS				210
#define SK_TOUGHNESS_WILL			211
#define SK_FORTITUDE				212
#define SK_IRON_BODY				213
#define SK_SPIRIT_BATTERY			214

#define SK_HOLD_THE_LINE			215
#define SK_KNOCK_DOWN				216
#define SK_DRAGON_HEART				217
#define SK_ATHLETICS				218
#define SK_XXX85					219

#define SK_XXX86					220
#define SK_XXX87					221
#define SK_XXX88					222
#define SK_XXX89					223
#define SK_XXX90					224

/*
 * Steamware system by Courtney Campbell
 * contact valis@oook.cz for details
 * maximum number of types of steamware
 */ 

#define MAX_STEAMWARE_PARTS			5
#define MAX_UPGRADE					5
/* 
 * Types of steamware 
 */
 
#define SW_EYES				0
#define SW_WIRED_REFLEX		1
#define SW_DERMAL_PLATE		2
#define SW_FURNACE_CORE		3
#define SW_SPURS			4

/*
 * Types of upgrades
 */
#define SWUPGRADE_ALPHA		0
#define SWUPGRADE_BETA		1
#define SWUPGRADE_GAMMA		2
#define SWUPGRADE_DELTA		3

/*
 * maximum magic knowledge skill
 */
#define MAX_SPELL_SKILL		80


/*** Pet constants -- not at this moment (semi)implimented.  ***/
/*
 * Commands
 */
#define PET_DISMISS					1
#define PET_STAY_CLOSE				2
#define PET_FOLLOW_ME				3
#define PET_SEEK_AND_DESTROY		4
#define PET_ALLOW_SPACE				5
#define PET_STAY_AWAY				6
#define PET_OPEN_DOORS				7
#define PET_TAKE_ITEMS				8

/*
 * Follow distances
 */
#define PET_CLOSE_DIST				1
#define PET_FOLLOW_DIST				6
#define PET_SEEK_DIST				10
#define PET_DESTROY_DIST			155
#define PET_SPACE_DIST				(-10)
#define PET_AWAY_DIST				(-25)

/*
 * physical attack special bonus types 
 */
 
#define	PY_ATTACK_CRITICAL		1
#define PY_ATTACK_IMPACT		2
#define PY_ATTACK_STUN			3


/*
 * Speaking monster constants -- not working.
 */
#define WHITE_RABBIT 			33

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
#define GREAT_OBJ	4

/*
 * There is a 1/20 (5%) chance that ego-items with an inflated base-level are
 * generated when an object is turned into an ego-item (see make_ego_item()
 * in object2.c). As above, lower values yield better ego-items more often.
 */
#define GREAT_EGO	10

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON	25		/* 1/chance of inflated monster level */

/*
 * Noise/stealth constant
 */

#define WAKEUP_ADJ 20

/*
 * Refueling constants - pval's are in object2.c
 */
#define FUEL_TAPER		1000	/* Maximum amount of fuel in a taper */
#define FUEL_CANDLE		4000	/* Maximum amount of fuel in a candle */
#define FUEL_TORCH		8000	/* Maximum amount of fuel in a torch */
#define FUEL_TORCH_ONE	1000	/* Turns when lite radis goes down to 1 for torch  */
#define FUEL_LAMP		15000	/* Maximum amount of fuel in a lantern */
#define FUEL_LAMP_TWO	4000	/* Turns when lite radius goes down to 2 for lamp */
#define FUEL_LAMP_ONE	1000	/* Turns when lite radius goes down to 1 for lamp */

/*
 * More maximum values
 */
#define MAX_SIGHT	20	/* Maximum view distance */
#define MAX_RANGE	20	/* Maximum range (spells, etc) */

/*
 * There is a 1/100 chance per round of creating a new monster
 */
#define MAX_M_ALLOC_CHANCE	100

/*
 * Normal levels get at least 14 monsters
 */
#define MIN_M_ALLOC_LEVEL	18

/*
 * The town starts out with 2 residents during the day
 */
#define MIN_M_ALLOC_TD		2

/*
 * The town starts out with 4 residents during the night
 */
#define MIN_M_ALLOC_TN		4

/*
 * Player constants
 */
#define PY_MAX_EXP	99999999L	/* Maximum exp */
#define PY_MAX_GOLD	999999999L	/* Maximum gold */
#define PY_MAX_LEVEL	50		/* Maximum level */

/*
 * Player "food" crucial values
 */
#define PY_FOOD_MAX		15000	/* Food value (Bloated) */
#define PY_FOOD_FULL	10000	/* Food value (Normal) */
#define PY_FOOD_ALERT	2000	/* Food value (Hungry) */
#define PY_FOOD_WEAK	1000	/* Food value (Weak) */
#define PY_FOOD_FAINT	500		/* Food value (Fainting) */
#define PY_FOOD_STARVE	100		/* Food value (Starving) */

/*
 * Player regeneration constants
 */
#define PY_REGEN_TOWN		197		/* Resting is easy in town. */
#define PY_REGEN_NORMAL		15		/* Regen factor*2^16 when full old value 197*/
#define PY_REGEN_WEAK		3		/* Regen factor*2^16 when weak old value 98*/
#define PY_REGEN_FAINT		1		/* Regen factor*2^16 when fainting old value 33*/
#define PY_REGEN_HPBASE		250		/* Min amount hp regen*2^16 old value 1442 */
#define PY_REGEN_WPBASE   5    /* Min amount wp regen -no old value */
#define PY_REGEN_MNBASE		250	/* Min amount mana regen*2^16 old value 524*/

/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK		23

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_WIELD		24
#define INVEN_GUN			25
#define INVEN_LEFT		26
#define INVEN_RIGHT		27
#define INVEN_NECK		28
#define INVEN_LITE		29
#define INVEN_BODY		30
#define INVEN_OUTER		31
#define INVEN_LEG			32
#define INVEN_HEAD		33
#define INVEN_HANDS		34
#define INVEN_FEET		35

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_SUBTOTAL	36
#define INVEN_BLANK 	36

/* One loaded gun slot */
#define INVEN_LOADEDGUN		37

#define INVEN_TOTAL	38

/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 */
#define MAX_STACK_SIZE			100

/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 * Old order is Str, Int, Wis, Dex, Con, Chr
 */
#define A_MUS	0
#define A_AGI	1
#define A_VIG	2
#define A_SCH	3
#define A_EGO	4
#define A_CHR	5

/*
 * Total number of stats.
 */
#define A_MAX	6

/*
 * Player sex constants (hard-coded by save-files, arrays, etc)
 */
#define SEX_FEMALE		0
#define SEX_MALE		1

/* 
 * Player race constants (hard-coded by save-files, arrays, etc.)
 */
#define RACE_BRITISH		0
#define RACE_ASIATIC		1
#define RACE_AMERICAN		2
#define RACE_AFRICAN		3
#define RACE_FRENCH			4
#define RACE_SPANISH		5
#define RACE_GERMAN			6
#define RACE_RUSSIAN		7
#define RACE_FINNISH		8
#define RACE_ARABIC			9
#define RACE_DWARF			10
#define RACE_BROWNIE		11
#define RACE_DAOINE_SIDHE	12
#define RACE_SEELIE_FAE		13
#define RACE_UNSEELIE_FAE	14
#define RACE_AUTOMATA		15
#define RACE_STEAM_MECHA	16
#define RACE_DJINN			17
#define RACE_RAKSHASA		18
#define RACE_GIANT			19
#define RACE_OGRE			20
#define RACE_TROLL			21
#define RACE_GHOST			22
#define RACE_GOBLIN			23
#define RACE_OLD_ONE		24

#define RACE_MAX 25

/*
 * Player class constants (hard-coded by save-files, arrays, etc.)
 */
#define CLASS_OFFICER		0
#define CLASS_AESTHETE		1
#define CLASS_ENGINEER		2
#define CLASS_MEDIUM		3
#define CLASS_ADVENTURER	4
#define CLASS_DASHING_H		5
#define CLASS_GENTLEMAN		6
#define CLASS_ROGUE			7
#define CLASS_NATURAL		8

#define CLASS_MAX   9

/*** Screen Locations ***/
/*
 * Some screen locations for various display routines
 * Currently, row 8 and 15 are the only "blank" rows.
 * That leaves a "border" around the "stat" values.
 */
#define ROW_RACE		2
#define COL_RACE		0	/* <race name> */

#define ROW_CLASS		3
#define COL_CLASS		0	/* <class name> */

#define ROW_TITLE		1
#define COL_TITLE		0	/* <title> or <mode> */

#define ROW_LEVEL		4
#define COL_LEVEL		0	/* "LEVEL xxxxxx" */

#define ROW_EXP			5
#define COL_EXP			0	/* "EXP xxxxxxxx" */

#define ROW_GOLD		6
#define COL_GOLD		0	/* "AU xxxxxxxxx" */

#define ROW_STAT		8
#define COL_STAT		0	/* "xxx   xxxxxx" */

#define ROW_ANTI		14

#define ROW_AC			15
#define COL_AC			0	/* "Cur AC xxxxx" */

#define ROW_HP			16
#define COL_HP			0	/* "Max HP xxxxx" */

#define ROW_WP			17
#define COL_WP			0	/* "Cur HP xxxxx" */

#define ROW_SP			18
#define COL_SP			0	/* "Max SP xxxxx" */

/* Old value 19 XCCCX */
#define ROW_EFFECT1		19
#define COL_EFFECT		0

#define ROW_EFFECT2		20

#define ROW_INFO		20
#define COL_INFO		0	/* "xxxxxxxxxxxx" */

#define ROW_CUT			21
#define COL_CUT			0	/* <cut> */

#define ROW_STUN		22
#define COL_STUN		0	/* <stun> */

#define ROW_HUNGRY		(Term->hgt - 1)
#define COL_HUNGRY		0	/* "Weak" / "Hungry" / "Full" / "Gorged" */

#define ROW_BLIND		(Term->hgt - 1)
#define COL_BLIND		7	/* "Blind" */

#define ROW_CONFUSED	(Term->hgt - 1)
#define COL_CONFUSED	13	/* "Confused" */

#define ROW_AFRAID		(Term->hgt - 1)
#define COL_AFRAID		22	/* "Afraid" */

#define ROW_POISONED	(Term->hgt - 1)
#define COL_POISONED	29	/* "Poisoned" */

#define ROW_STATE		(Term->hgt - 1)
#define COL_STATE		38	/* <state> */

#define ROW_SPEED		(Term->hgt - 1)
#define COL_SPEED		49	/* "Slow (-NN)" or "Fast (+NN)" */

#define ROW_LEVEL_G		(Term->hgt - 1)
#define COL_LEVEL_G		64	/* "Level gain" */

#define ROW_DEPTH		(Term->hgt - 1)
#define COL_DEPTH		71	/* "Lev NNN" / "NNNN ft" */

#define ROW_MAP			1
#define COL_MAP			13

/*** General index values ***/

/*
 * Quest types
 */
#define QUEST_FIXED			1
#define QUEST_FIXED_U		2
#define QUEST_GUILD			3
#define QUEST_UNIQUE		4
#define QUEST_VAULT			5

/*
 * Quest reward types
 */
#define REWARD_GOLD			1
#define REWARD_SKILL		2
#define REWARD_GOOD_ITEM	3
#define REWARD_GREAT_ITEM	4
#define REWARD_TAILORED		5

/*
 * Quest item name parts
 */
#define QUEST_NAME_1	11
#define QUEST_NAME_2	14
#define QUEST_NAME_3	11


/*
 * Legal restrictions for "summon_specific()"
 */
#define SUMMON_AUTOMATA		11
#define SUMMON_SPIDER		12
#define SUMMON_HOUND		13
#define SUMMON_MONKEY		14
#define SUMMON_ALIEN		15
#define SUMMON_DEMON		16
#define SUMMON_UNDEAD		17
#define SUMMON_ELEMENTAL	18
#define SUMMON_ANIMAL		19
#define SUMMON_BEASTMAN		20
#define SUMMON_PLANT		21
#define SUMMON_CUTTENCLIP  22
#define SUMMON_LO_DEMON		25
#define SUMMON_HI_DEMON		26
#define SUMMON_HI_UNDEAD	27
#define SUMMON_HI_ELEMENTAL	28
#define SUMMON_WRAITH		31
#define SUMMON_UNIQUE		32
#define SUMMON_KIN			33


/* 
 * Indexes of the various "resistances" (hard-coded by savefiles, etc)
 */
#define RS_FIR	0	/* Fire */
#define RS_EAR	1	/* Earth */
#define RS_AIR	2	/* Air */
#define RS_WTR	3	/* Acid */
#define RS_ELC	4	/* Electricty */
#define RS_ICE	5	/* Ice */
#define RS_ACD	6	/* Acid */
#define RS_PSN	7	/* Poison */
#define RS_TIM	8	/* Time */
#define RS_ETH	9	/* Ether */
#define RS_SND	10	/* Sound */
#define RS_NTH	11	/* Nether */
#define RS_LIT	12	/* Light */
#define RS_DRK	13	/* Dark */
#define RS_PSI	14	/* Mental */
#define RS_TLK	15	/* Force */
#define RS_SPI	16	/* unused */

/*
 * Total number of resistances
 */
#define RS_MAX	17

/* 
 * Amount that Temporary resistance increases resistance 
 */
 
#define TEMP_RES_BONUS	33

/*
 * Maximum useful value of resist 
 */

#define MAX_USEFUL_RESIST 100

/* 
 * Levels of resistances needed to ignore elemental damage
 */
#define RST_IGNORE_ELEM		10

/*
 * Spell types used by project(), and related functions.
 */
#define GF_HURT				1	/* Plain Old Damage */

/* Basic Resists (Fire, Earth, Air, Water) */
#define GF_HEAT 			2	/* Basic Fire */
#define GF_FIRE				3	/* Fire */
#define	GF_PLASMA			4	/* Advanced Fire */
#define GF_ROCK				5	/* Basic Earth */
#define GF_EARTH			6	/* Earth */
#define GF_SHARDS			7	/* Advanced Earth */
#define GF_GUST				8	/* Basic Air */
#define GF_WIND				9	/* Air */
#define GF_GALE				10	/* Advanced Air */
#define GF_RUST				11 	/* Basic Water */
#define GF_STEAM			12	/* Water */
#define GF_STORM			13	/* Advanced Water */

/* Advanced Resists (Electricity, Ice, Acid, and Poison) */
#define GF_SHOCK			14	/* Basic Electricty */
#define GF_ELEC				15	/* Electricty */
#define GF_VOLT				16	/* Advanced Electricty */
#define GF_CHILL			17	/* Basic Ice */
#define GF_ICE				18	/* Ice */
#define GF_GLACIAL			19	/* Advanced Ice */
#define GF_CORROSIVE		20	/* Basic Acid */
#define GF_ACID				21	/* Acid */
#define GF_LIQUESCE			22	/* Advanced Acid */
#define GF_CAUSTIC			23	/* Basic Poison */
#define GF_POISON			24	/* Poison */
#define GF_CONTAGION		25	/* Advanced Poison */

/* High Resists (Time, Ether, Sound, XXX) */
#define GF_AGE				26	/* Basic Time */
#define GF_TIME				27	/* Time */
#define GF_CHRONOS			28	/* Advanced Time */
#define GF_VAPOR			29	/* Basic Ether */
#define GF_ETHER			30	/* Ether */
#define GF_NEXUS			31	/* Advanced Ether */
#define GF_VIBE				32	/* Basic Sound */
#define GF_SOUND			33	/* Sound */
#define GF_SONIC			34	/* Advanced Sound */
#define GF_UNHOLY			35	/* Basic Nether */
#define GF_NETHER			36	/* Nether */
#define GF_ABYSS			37	/* Advanced Nether */

/* Fields and Forces */
#define GF_EMP				38	/* Electromagnetic Pulse */
#define GF_MAGNETIC			39	/* Magnetic */
#define GF_GRAVITY			40	/* Gravity */
#define GF_WEAK_RAD			41	/* Weak Radiation */
#define GF_STRONG_RAD		42	/* Strong Radiation */

/* Light and Dark */
#define GF_GLOW				43	/* Basic Light */
#define GF_LIGHT			44	/* Light */
#define GF_BRILLIANCE		45	/* Advanced Light */
#define GF_DIM				46	/* Basic Dark */
#define GF_DARK				47	/* Dark */
#define GF_TENEBROUS		48	/* Advanced Dark */

/* Mental / Spiritual Resists */
#define GF_FEAR				49	/* Basic Psi */
#define GF_PSI				50	/* Psi */
#define GF_DOMINATION		51	/* Advanced Psi */
#define GF_STUN				52	/* Basic Tk */
#define GF_TK				53	/* Tk */
#define GF_FORCE			54	/* Advanced Tk */
#define GF_CONFUSION		55	/* Basic Spirit */
#define GF_SPIRIT			56	/* Spirit */
#define GF_ECTOPLASM		57	/* Advanced Spirit */

/* Ranged Attacks (No Resists) */
#define GF_WHIP				58	/* Lash/spit attacks */
#define GF_ARROW			59	/* Standard slow missle */
#define GF_BULLET			60	/* Rifle/Gun missle */
#define GF_SHOT				61	/* Shotgun missle - GF_PYRO_SHOT below */
#define GF_ROCKET			62	/* Rocket */
#define GF_MISSILE			63	/* Missle */

/* Charms (Player to monster only) */
#define GF_CHARM				64
#define GF_CONTROL_ANIMAL		65
#define GF_CONTROL_PLANT		66
#define GF_CONTROL_AUTO_CONST	67
#define GF_CONTROL_XXX8			68
#define GF_CONTROL_ELEMENTAL	69
#define GF_CONTROL_DEMON		70
#define GF_CONTROL_UNDEAD		71
#define GF_CONTROL_BEASTMAN		72
#define GF_CONTROL_ALIEN		73
#define GF_CONTROL_XXX9			74
#define GF_CONTROL_XXX10		75

/* No Damage Effects */
#define GF_CLONE			76
#define GF_POLY				77
#define GF_HEAL				78
#define GF_SPEED			79
#define GF_SLOW				80
#define GF_STASIS			81
#define GF_SLEEP			82
#define GF_DRAIN			83
#define GF_MPDRAIN_MACHINE  84
#define GF_BRIBE				85
#define GF_FORGET				86
#define GF_CURSE				87
#define GF_XXX					88
#define GF_XXX1					89
#define GF_ENLIGHTENMENT	90
#define GF_GAIN_LEVEL			91


/* Special Damage Effects */
#define GF_PYRO_SHOT		95
#define GF_HOLY_FIRE 		96

/* Effects that alter the dungeon */
#define GF_KILL_WALL		100
#define GF_KILL_DOOR		101
#define GF_KILL_TRAP		102
#define GF_MAKE_WALL		103
#define GF_MAKE_DOOR		104
#define GF_MAKE_TRAP		105

/* Monster specific - Turning, teleporting, and dispelling effects */
/* Should probably add alien / automata / beastman */
#define GF_AWAY_UNDEAD		110
#define GF_AWAY_ALIEN			111
#define GF_AWAY_AUTOMATA	112
#define GF_AWAY_BEASTMAN	113
#define GF_AWAY_EVIL			114
#define GF_AWAY_ALL				115
#define GF_TURN_UNDEAD		116
#define GF_TURN_ALIEN			117
#define GF_TURN_AUTOMATA	118
#define GF_TURN_BEASTMAN	119
#define GF_TURN_ALL				120
#define GF_TURN_EVIL			121
#define GF_DISP_UNDEAD		122
#define GF_DISP_ALIEN			123
#define GF_DISP_AUTOMATA	124
#define GF_DISP_BEASTMAN	125
#define GF_DISP_EVIL			126
#define GF_DISP_ALL				127
#define GF_DISP_DEMON			128

/*
 * Some constants for the "learn" code.  These generalized from the
 * old DRS constants.
 */
#define LRN_FREE_SAVE		14	/* paralyzation/slowing attacks. */
#define LRN_FIRE			15
#define LRN_EARTH			16
#define LRN_AIR				17
#define LRN_WATER			18
#define LRN_ELEC			19
#define LRN_ICE				20
#define LRN_ACID			21
#define LRN_POISON			22
#define LRN_TIME			23
#define LRN_ETHER			24
#define LRN_SOUND			25
#define LRN_NETHER			26
#define LRN_LIGHT			27
#define LRN_DARK			28
#define LRN_PSI				29
#define LRN_TK				30
#define LRN_SPIRIT			31
#define LRN_MANA			32
#define LRN_FEAR			33
#define LRN_BLIND			34
#define LRN_CONFU			35
#define LRN_SAVE			36
#define LRN_ARCH			37
#define LRN_PARCH			38 /* What to do about this? */

#define LRN_MAX				60

/*
 * Number of keymap modes
 */
#define KEYMAP_MODES	2

/*
 * Mode for original keyset commands
 */
#define KEYMAP_MODE_ORIG	0

/*
 * Mode for roguelike keyset commands
 */
#define KEYMAP_MODE_ROGUE	1

/*** Feature Indexes (see "lib/edit/feature.txt") ***/
/* Nothing */
#define FEAT_NONE		0x00
/* Various */
#define FEAT_FLOOR		0x01
#define FEAT_INVIS		0x02
#define FEAT_GLYPH		0x03
#define FEAT_OPEN		0x04
#define FEAT_BROKEN		0x05
#define FEAT_LESS		0x06
#define FEAT_MORE		0x07
/* Traps */
#define FEAT_TRAP_HEAD	0x10
#define FEAT_TRAP_TAIL	0x1F
/* Doors */
#define FEAT_DOOR_HEAD	0x20
#define FEAT_DOOR_TAIL	0x2F
/* Extra */
#define FEAT_SECRET		0x30
#define FEAT_RUBBLE		0x31
/* Seams */
#define FEAT_MAGMA		0x32
#define FEAT_QUARTZ		0x33
#define FEAT_MAGMA_H	0x34
#define FEAT_QUARTZ_H	0x35
#define FEAT_MAGMA_K	0x36
#define FEAT_QUARTZ_K	0x37
/* Walls */
#define FEAT_WALL_EXTRA	0x38
#define FEAT_WALL_INNER	0x39
#define FEAT_WALL_OUTER	0x3A
#define FEAT_WALL_SOLID	0x3B
#define FEAT_PERM_EXTRA	0x3C
#define FEAT_PERM_INNER	0x3D
#define FEAT_PERM_OUTER	0x3E
#define FEAT_PERM_SOLID	0x3F

/* Shops */
#define FEAT_SHOP_HEAD	0x40
#define FEAT_SHOP_TAIL	0x49

/*** Artifact indexes (see "lib/edit/artifact.txt") ***/

/* Lites */	
#define ART_EDISON_LITE					1
#define ART_HOLMES						2
#define ART_TESLA_LITE					3

/* Amulets */
#define ART_ARBACES						4
#define ART_DEE							5
#define ART_NEMO_NAUTILUS				6

/* Rings */
#define ART_MATERIALISMUS 				7
#define ART_EDISON						8
#define ART_TESLA_RING					9
#define ART_FIELD_GENERATION			10
/* 12, & 13 free */

/* Other Insta Arts */
#define ART_DUPIN						11
#define ART_LOUP_BLANC					12
#define ART_ISIS_CROWN					13
#define ART_BULL_PHAROAH				14
#define ART_EYE_RA						15
#define ART_PECTORAL_KHEPER				16
#define ART_LOCKET_DEFARGE				17
#define ART_SLIPPERS_DORTHY				18

/* 17, 18 currently free */

/* A crapton of books 20-103 */

/* 104-150 currently free */

/* Armour */
#define ART_HOLMES_PEA					151
#define ART_BARR						152
#define ART_BELL						153
#define ART_BLAKE_TWEED 				154
#define ART_SAWYER_JACKET				155
#define ART_NOBEL_SUIT					156
#define ART_J_HARKER_VEST				157
#define ART_RACKHAM_SILK				158
#define ART_EMMA_ROBE					159
#define ART_FREUD_TWEED					160
#define ART_VICTOR_SMOKE				161
#define ART_POIROT_WAISTCOAT			162
#define ART_CARRION_HARNESS				163
#define ART_PHANTOM_WAISTCOAT			164
#define ART_YEN_SIN_JACKET				165


/* Pants (formerly Shields) */
#define ART_HARRY_TROUSERS				191
#define ART_LIVINGSTONE_TROUSERS		192
#define ART_M_HARKER_PETTYCOATS			193
#define ART_ROSA_PETTYCOATS				194
#define ART_ALICE_PETTYCOATS			195

/* Helms and Crowns */
#define ART_SEXTON_BOWLER				211
#define ART_BUCKET						212
#define ART_HOLMES_DEER					213
#define ART_EDISON_HAT					215
#define ART_GAUSS_CAP					216
#define ART_HARDWIGG_SPECTACLES			217

/* Cloaks */
#define ART_ALERIEL						241
#define ART_NEMO_CLOAK					242
#define ART_DRACULA_CLOAK				243
#define ART_HEARTH_CLOAK				244 
#define ART_INNOMINATO_CLOAK			245
#define ART_IGNAZ_CLOAK					246
#define ART_MYCROFT_MANTLE				247
#define ART_IMMORTAL_MANTLE				248

/* Gloves */
#define ART_FOGG_SILK_GLOVES			266
#define ART_SHADOW_GLOVES				267
#define ART_NOBEL_GLOVES				268
#define ART_PUCK_GLOVES					269
#define ART_HOUDINI_GLOVES				270

/* Boots */
#define ART_BOOTS_BJELKE				291
#define ART_BOOTS_SEVEN_LG				292
#define ART_BOOTS_NILS					293

/* Weapons */
#define ART_JOHN_HENRY_HAMMER			316
#define ART_CUTLASS_NEMO	    		317
#define ART_CANE_HYDE		    		318
#define ART_WHIP_QUATERMAIN	    		319
#define ART_QSTAFF_CROWLEY				320
#define ART_PICK_BRUNEL					321
#define ART_SCYTHE_CYRUS				322
#define ART_HAMMER_HELSING				323
#define ART_MACE_RAMSES					324
#define ART_SCORPION_CLUB				325
#define ART_ARNE_BROKEN_DAGGER			326
#define ART_CANE_ARRONAX				327
#define ART_HATCHET_OF_CONSEIL			328
#define ART_HARPOON_OF_NED				329
#define ART_AXE_NELKO					330
#define ART_AXE_AK						331
#define ART_MALLET_QUEEN_HEART			332
#define ART_SHOVEL_FRANK_CALVERT		333
#define ART_SHOVEL_HEINRICH_SCHLIEMANN	334
#define ART_PICK_GUY_FAWKES				335
#define ART_RAPIER_SCARLET_PIMPERNEL	336
#define ART_SABER_HENRY_MORGAN			337
#define ART_BOWIE_KNIFE_MACHEATH		338
#define ART_SABRE_CLUBS					339
#define ART_SABRE_SPADES				340
#define ART_SABRE_HEARTS				341
#define ART_SABRE_DIAMONDS				342
#define ART_SABRE_CUPS					343
#define ART_CLUB_HERC					344
#define ART_SPEAR_GEORGE				345
#define ART_RAPIER_BARSOOM			346
#define ART_SABER_KADABRA				347
#define ART_BROAD_AQUILONIA			348
#define ART_HAMMER_SNAEFELLSJOKULL 349
#define ART_DIRK_RED_NAIL				350
#define ART_BASTARD_VALERIA			351
#define ART_CUTLASS_KORAD				352
#define ART_PNEUMATIC_TOONOL		353
#define ART_GREAT_AXE_KULL			354
#define ART_BATTLE_AXE_BRAK			355

/* Need to replace artifact's with guns */
#define ART_CARTER_PISTOL				401
#define ART_PISTOL_QUATERMAIN 			402
#define ART_PISTOL_STYLE				403
#define ART_SAWED_OFF_DOC_HOLLIDAY		404
#define ART_PISTOL_NED_BUNTLINE			405
#define ART_PISTOL_MAUSER				406
#define ART_REVOLVER_WATSON				407
#define ART_SHOTGUN_MARQUIS_TOUR		408

/*
 * Hack -- first "normal" artifact in the artifact list.  All of
 * the artifacts with indexes from 1 to 150 are "special" (lights,
 * rings, amulets), and the ones from 151 to 500 are "normal".
 */
#define ART_MIN_NORMAL		150

/**************************************/
/*** Object "tval" and "sval" codes ***/
/**************************************/
/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "sval" and "cost".
 *
 * Note that a "BOW" with tval = 19 and sval S = 10*N+P takes a missile
 * weapon with tval = 16+N, and does (xP) damage when so combined.  This
 * fact is not actually used in the source, but it kind of interesting.
 *
 * Note that as of 2.7.8, the "item flags" apply to all items, though
 * only armor and weapons and a few other items use any of these flags.
 */

#define TV_SKELETON		1	/* Skeletons ('s') */
#define TV_BOTTLE		2	/* Empty bottles ('!') */
#define TV_JUNK			3	/* Sticks, Pottery, etc ('~') */
#define TV_SPIKE		5	/* Spikes ('~') */
#define TV_CHEST		7	/* Chests ('~') */
#define TV_AMMO			16	/* Ammo for pistols */
#define TV_BULLET		17	/* Ammo for rifle */
#define TV_SHOT			18	/* Ammo for shotgun */
#define TV_GUN			19	/* Pistols/Rifles/Shotguns */
#define TV_DIGGING		20	/* Shovels/Picks */
#define TV_HAFTED		21	/* Blunt Hafted weapons */
#define TV_POLEARM		22	/* Piercing Spears & Polearms */
#define TV_SWORD		23	/* Slashing swords */
#define	TV_DAGGER		24	/* Piercing Daggers */
#define	TV_AXES			25	/* Slashing Axes */
#define	TV_BLUNT		26	/* Blunt Clubs and Staves */
#define TV_BOOTS		30	/* Boots */
#define TV_GLOVES		31	/* Gloves */
#define TV_HELM			32	/* Helms */
#define TV_CROWN		33	/* Crowns */
#define TV_LEG			34	/* Pant (formerly Shields) */
#define TV_CLOAK		35	/* Cloaks */
#define TV_SOFT_ARMOR	36	/* Soft Armor */
#define TV_HARD_ARMOR	37	/* Hard Armor */
#define TV_DRAG_ARMOR	38	/* Dragon Scale Mail */
#define TV_LITE			39	/* Lites (including Specials) */
#define TV_AMULET		40	/* Amulets (including Specials) */
#define TV_RING			45	/* Rings (including Specials) */
#define TV_MECHA_TORSO	46  /* Mecha Torso */
#define TV_MECHA_HEAD	47  /* Mecha Head */
#define TV_MECHA_ARMS	48  /* Mecha Arms */
#define TV_MECHA_FEET	49  /* Mecha Feet */
#define TV_TOOL			55
#define TV_RAY			65
#define TV_APPARATUS	66
#define TV_MECHANISM	70
#define TV_TEXT			71
#define TV_BOOK			73
#define TV_TONIC		75
#define TV_FLASK		77
#define TV_FOOD			80
#define TV_MAGIC_BOOK	90
#define TV_GOLD			100	/* Gold can only be picked up by players */

/* The "sval" codes for TV_AMMO (16)/TV_BULLET (17)/TV_SHOT (18) */
#define SV_AMMO_LIGHT		0	/* pebbles */
#define SV_AMMO_NORMAL		1	/* shots, arrows, bolts */
#define SV_AMMO_HEAVY		2	/* seeker arrows and bolts */
#define SV_AMMO_BSHOT		4	/* Special buckshot only */

/* The "sval" codes for TV_GUN  (19) (note information in "sval") */
/* pistols | Light rifles | 		   (x2) */
#define SV_DERRINGER			2	/* (x2) */
#define SV_32_REVOLVER			12	/* (x2) */
#define SV_38_REVOLVER			22	/* (x2) */
#define SV_41_REVOLVER			32	/* (x2) */
#define SV_45_REVOLVER			42	/* (x2) */
#define SV_22_BOLT_ACTION		52	/* (x2) */

/* Heavy Rifles | Light Shotguns |     (x3) */
#define SV_30_LEVER_ACTION		3	/* (x3) */
#define SV_45_MARTINI_HENRY		13	/* (x3) */
#define SV_COL_MORAN			23	/* (x3) */
#define SV_303_LEE_ENFIELD		33	/* (x3) */
#define SV_ELEPHANT_GUN			43	/* (x3) */
#define SV_20_GAGUE				53	/* (x3) */
#define SV_SAWED_OFF			63  /* (x3) */

/* Heavy Shotgun    				   (x4) */
#define SV_16_GAGUE				4	/* (x4) */
#define SV_12_GAGUE				14	/* (x4) */			
#define SV_10_GAGUE				24	/* (x4) */

/* The "sval" codes for TV_DIGGING (20) */
#define SV_SHOVEL				1
#define SV_PNEUMATIC_SHOVEL 	2
#define SV_PICK					4
#define SV_PNEUMATIC_PICK		5


/* The "sval" values for TV_HAFTED (21) */
#define SV_WHIP					2	/* 1d6 */
#define SV_HAMMER				3	/* 2d3 */
#define SV_MACE					4	/* 2d4 */
#define SV_MALLET				5	/* 3d2 */
#define SV_WAR_HAMMER			6	/* 3d3 */
#define SV_LEAD_FILLED_MACE		8	/* 3d4 */
#define SV_THROWING_HAMMER		10	/* 2d4 */

/* The "sval" values for TV_POLEARM (22)*/
#define SV_HARPOON				1	/* 2d4 */
#define SV_JAVELIN				2	/* 1d5 */
#define SV_SPEAR				4	/* 1d6 */
#define SV_TRIDENT				5	/* 1d9 */
#define SV_PIKE					8	/* 2d5 */
#define SV_GLAIVE				13	/* 2d6 */
#define SV_HALBERD				15	/* 3d4 */

/* The "sval" codes for TV_SWORD (23) */
#define SV_BROKEN_SWORD			2	/* 1d2 */
#define SV_MAIN_GAUCHE			5	/* 1d5 */
#define SV_RAPIER				7	/* 1d6 */
#define SV_SMALL_SWORD			8	/* 1d6 */
#define SV_SABRE				11	/* 1d7 */
#define SV_CUTLASS				12	/* 1d7 */
#define SV_SCYTHE				14	/* 5d3 */
#define SV_BROAD_SWORD			16	/* 2d5 */
#define SV_LONG_SWORD			17	/* 2d5 */
#define SV_SCIMITAR				18	/* 2d5 */
#define SV_BASTARD_SWORD		21	/* 3d4 */
#define SV_CAVALRY_SABER		25	/* 3d6 */
#define SV_SWORD_CANE			28	/* 4d5 */
#define SV_PNEUMATIC_SWORD		32  /* 8d5 */

/* The "sval" codes for TV_DAGGER (24) */
#define SV_BROKEN_DAGGER		2	/* 1d1 */
#define SV_THROWING_KNIFE		4	/* 1d3 */
#define SV_DAGGER				6	/* 1d4 */
#define SV_THROWING_DAGGER		8	/* 1d4 */
#define SV_SHORT_SWORD			10	/* 1d7 */
#define SV_DIRK							11	/* 1d7 */
#define SV_BOWIE_KNIFE			14	/* 4d2 */
#define SV_PNEUMATIC_DAGGER		18	/* 8d3 */

/* The "sval" codes for TV_AXES (25) */
#define SV_THROWING_HATCHET		1	/* 1d8 */
#define SV_BEAKED_AXE			2 	/* 2d6 */
#define SV_BROAD_AXE			4	/* 2d6 */
#define SV_BATTLE_AXE			6	/* 2d8 */
#define SV_GREAT_AXE			8	/* 4d4 */
#define SV_PNEUMATIC_AXE		10	/* 3d8 */

/* The "sval" codes for TV_BLUNT (26)*/
#define SV_BILLY_CLUB			2	/* 1d3 */
#define SV_CANE					4	/* 2d4 */
#define SV_CANE_WSTICK			6	/* 1d3 */
#define SV_CANE_BLACK			8	/* 1d3 */
#define SV_CLUB					10	/* 1d6 */
#define SV_QUARTERSTAFF			12	/* 1d9 */
#define SV_SPIKED_CLUB			14	/* 2d7 */


/* The "sval" codes for TV_BOOTS (30) */
#define SV_RUBY_RED_SLIPPERS	1
#define SV_POINTED_TOE_DANDIES	2
#define SV_ANKLE_BOOTS			4
#define SV_SQUARE_TOE_DANDIES	6
#define SV_HALF_BOOTS			8
#define SV_LACED_SHOES			10
#define SV_BUTTONED_BOOTS		12
#define SV_LACED_BOOTS			14

/* The "sval" codes for TV_GLOVES (31) */
#define SV_SET_OF_LEATHER_GLOVES	2
#define SV_SET_OF_SILK_GLOVES	    4
#define SV_SET_OF_GLOVES			6
#define SV_SET_OF_WORK_GLOVES		8

/* The "sval" codes for TV_HELM (32) */
#define SV_GAS_MASK				1
#define SV_HARD_LEATHER_CAP		2
#define SV_WOOLEN_BEANIE		4 
#define SV_TOP_HAT				6
#define SV_DEERSTALKER			8
#define SV_BOWLER				10
#define SV_FEZ					12
#define SV_SPECTACLES			13
/* These should now be insta arts */
#define SV_MASK					14
#define SV_GREEN_GLASSES		16
#define SV_CROWN				18
#define SV_EYE					20

/* The "sval" codes for TV_LEG (34) */
#define SV_HOSE					2
#define SV_PANTS				3
#define SV_BREECHES				4
#define SV_PANTALOONS			5
#define SV_PETTICOATS			10
/*Insta art */
#define SV_BULL_TAIL			16

/* The "sval" codes for TV_CLOAK (35) */
#define SV_CLOAK					1
#define SV_FUR_CLOAK				2
#define SV_SHADOW_CLOAK				6
#define SV_MANTLE					8

/* The "sval" codes for TV_SOFT_ARMOR (36) */
#define SV_FILTHY_RAG				1
#define SV_ROBE						2
#define SV_SATIN_SMOKE				3
#define SV_LEATHER_WAISTCOAT		4
#define SV_FANCY_SILK_VEST			5
#define SV_LEATHER_WAISTCOAT_VEST	6
#define SV_WOOL_OVERCOAT			7
#define SV_HEAVY_JACKET				8
#define SV_FRENCH_PERCALE_SHIRT		9
#define SV_HEAVY_TRENCHCOAT			10
#define SV_LEATHER_HARNESS		11
#define SV_TWEED_JACKET				12 

/* The "sval" codes for TV_HARD_ARMOR (37) */
#define SV_OFFICER_UNIFORM			1
#define SV_HUNTER_UNIFORM			3
#define SV_PEA_JACKET				4
#define SV_TWEED_SUIT				6
#define SV_PROFESSIONAL				8
#define SV_CLAY_WORSTED				10
#define SV_VICUNA_CHEVIOT			12
#define SV_COAL_SUIT				16
#define SV_PRINCE_ALBERT			20

/* The sval codes for TV_LITE (39) */
#define SV_LITE_TORCH			0
#define SV_LITE_LANTERN			1
#define SV_LITE_TAPER			2
#define SV_LITE_CANDLE_WAX		3
#define SV_LITE_CANDLE_TALLOW	4
#define SV_LITE_EDISON			5
#define SV_LITE_HOLMES			6
#define SV_LITE_TESLA			7

/* The "sval" codes for TV_AMULET (40) */

#define SV_AMULET_MUSCLE		1
#define SV_AMULET_AGILITY		2
#define SV_AMULET_VIGOR			3
#define SV_AMULET_EGO			4
#define SV_AMULET_SCHOOLING		5
#define SV_AMULET_CHARM			6
#define SV_AMULET_ADORNMENT		7
#define SV_AMULET_ADORNMENT2	8
#define SV_AMULET_ADORNMENT3	9
#define SV_AMULET_SLOW_DIGEST	10
#define SV_AMULET_STEALTH		11
#define SV_AMULET_SEARCHING		12
#define SV_AMULET_MANA			13
#define SV_AMULET_HEALTH		14
#define SV_AMULET_SAVE			15
#define SV_AMULET_SHADOW		16
#define SV_AMULET_REGEN_25		17
#define SV_AMULET_REGEN_50		18
#define SV_AMULET_REGEN_75		19
#define SV_AMULET_REGEN_100		20
#define SV_AMULET_REGEN_125		21
#define SV_AMULET_REGEN_150		22
#define SV_AMULET_THE_MAGI		23
#define SV_AMULET_ARBACES		24
#define SV_AMULET_DEE			25
#define SV_AMULET_NEMO			26
#define SV_AMULET_PECTORAL		27
#define SV_AMULET_LOCKET		28

/* The sval codes for TV_RING (45) */
#define SV_RING_MUS					1
#define SV_RING_AGI					2
#define SV_RING_VIG					3
#define SV_RING_SCH					4
#define SV_RING_EGO					5
#define SV_RING_CHR					6
#define SV_RING_SUSTAIN_MUS			7
#define SV_RING_SUSTAIN_AGI			8
#define SV_RING_SUSTAIN_VIG			9
#define SV_RING_SUSTAIN_SCH			10
#define SV_RING_SUSTAIN_EGO			11
#define SV_RING_SUSTAIN_CHR			12
#define SV_RING_PROTECTION			13
#define SV_RING_RESIST_FIRE			14
#define SV_RING_RESIST_EARTH		15
#define SV_RING_RESIST_AIR			16
#define SV_RING_RESIST_WATER		17
#define SV_RING_RESIST_ELEC			18
#define SV_RING_RESIST_ICE			19
#define SV_RING_RESIST_ACID			20
#define SV_RING_RESIST_POISON		21
#define SV_RING_SLOW_DIGESTION		22
#define SV_RING_FEATHER_FALL		23
#define SV_RING_FREE_ACTION			24
#define SV_RING_SEE_INVIS			25
#define SV_RING_RES_BEWILDERMENT	26
#define SV_RING_RESIST_NETHER		27
#define SV_RING_STEALTH				28
#define SV_RING_SEARCHING			29
#define SV_RING_ACCURACY			30
#define SV_RING_DAMAGE				31
#define SV_RING_SLAYING				32
#define SV_RING_SPEED				33
#define SV_RING_MANA				34
#define SV_RING_HEALTH				35

#define SV_RING_WOE					36
#define SV_RING_AGGRAVATION			37
#define SV_RING_WEAKNESS			38
#define SV_RING_STUPIDITY			39
#define SV_RING_TELEPORTATION		40

#define SV_MATERIALISMUS 			41
#define SV_EDISON					42
#define SV_TESLA_RING				43
#define SV_RING_FIELD_GENERATION	44


/* The "sval" codes for TV_MECHA_TORSO (46) */
/* HACK!!! Mecha part sval determines bonus! */
#define SV_MECHA_TORSO_TIN			2
#define SV_MECHA_TORSO_COPPER		4
#define SV_MECHA_TORSO_BRONZE		6
#define SV_MECHA_TORSO_BRASS		8
#define SV_MECHA_TORSO_IRON			10
#define SV_MECHA_TORSO_RUBBER		11
#define SV_MECHA_TORSO_CERAMIC		12
#define SV_MECHA_TORSO_STEEL		13
#define SV_MECHA_TORSO_CRYSTAL		14
#define SV_MECHA_TORSO_ALUMINIUM	16
#define SV_MECHA_TORSO_TITANIUM		18
#define SV_MECHA_TORSO_CAVORITE		20

/* The "sval" codes for TV_MECHA_HEAD (47) */
#define SV_MECHA_HEAD_TIN			2
#define SV_MECHA_HEAD_COPPER		4
#define SV_MECHA_HEAD_BRONZE		6
#define SV_MECHA_HEAD_BRASS			8
#define SV_MECHA_HEAD_IRON			10
#define SV_MECHA_HEAD_RUBBER		11
#define SV_MECHA_HEAD_CERAMIC		12
#define SV_MECHA_HEAD_STEEL			13
#define SV_MECHA_HEAD_CRYSTAL		14
#define SV_MECHA_HEAD_ALUMINIUM		16
#define SV_MECHA_HEAD_TITANIUM		18
#define SV_MECHA_HEAD_CAVORITE		20

/* The "sval" codes for TV_MECHA_ARMS (48) */
#define SV_MECHA_ARMS_TIN			2
#define SV_MECHA_ARMS_COPPER		4
#define SV_MECHA_ARMS_BRONZE		6
#define SV_MECHA_ARMS_BRASS			8
#define SV_MECHA_ARMS_IRON			10
#define SV_MECHA_ARMS_RUBBER		11
#define SV_MECHA_ARMS_CERAMIC		12
#define SV_MECHA_ARMS_STEEL			13
#define SV_MECHA_ARMS_CRYSTAL		14
#define SV_MECHA_ARMS_ALUMINIUM		16
#define SV_MECHA_ARMS_TITANIUM		18
#define SV_MECHA_ARMS_CAVORITE		20

/* The "sval" codes for TV_MECHA_FEET (49) */
#define SV_MECHA_FEET_TIN			2
#define SV_MECHA_FEET_COPPER		4
#define SV_MECHA_FEET_BRONZE		6
#define SV_MECHA_FEET_BRASS			8
#define SV_MECHA_FEET_IRON			10
#define SV_MECHA_FEET_RUBBER		11
#define SV_MECHA_FEET_CERAMIC		12
#define SV_MECHA_FEET_STEEL			13
#define SV_MECHA_FEET_CRYSTAL		14
#define SV_MECHA_FEET_ALUMINIUM		16
#define SV_MECHA_FEET_TITANIUM		18
#define SV_MECHA_FEET_CAVORITE		20

/* The "sval" codes for TV_TOOL (55) */
#define SV_TOOL_ANTI_PHOTON		0
#define SV_TOOL_SUMMONING		1
#define SV_TOOL_OBJECT_ANALYSIS	2
#define SV_TOOL_REMOVE_CURSE	3
#define SV_TOOL_PHOTON_GEN		4
#define SV_TOOL_MAPPING			5
#define SV_TOOL_DETECT_GOLD		6
#define SV_TOOL_DETECT_ITEM		7
#define SV_TOOL_DETECT_TRAP		8
#define SV_TOOL_DETECT_DOOR		9
#define SV_TOOL_PROBING			10
#define SV_TOOL_CURE_LIGHT_HP	11
#define SV_TOOL_CURE_LIGHT_SP	12
#define SV_TOOL_HEALING			13
#define SV_TOOL_CURING			14
#define SV_TOOL_SPEED			15
#define SV_TOOL_EARTHQUAKES		16
#define SV_TOOL_DESTRUCTION		17
#define SV_TOOL_TELEPORT		18

/* The "sval" codes for TV_RAY (65) */
#define SV_RAY_FIRE_BOLT		1
#define SV_RAY_EARTH_BOLT		2
#define SV_RAY_AIR_BOLT			3
#define SV_RAY_WATER_BOLT		4
#define SV_RAY_ICE_BOLT			5
#define SV_RAY_ELEC_BOLT		6
#define SV_RAY_ACID_BOLT		7
#define SV_RAY_POISON_BOLT		8
#define SV_RAY_TIME_BOLT		9
#define SV_RAY_ETHER_BOLT		10
#define SV_RAY_SONIC_BOLT		11
#define SV_RAY_EMP_BOLT			12
#define SV_RAY_LIGHT			13
#define SV_RAY_CLONE_MONSTER	14
#define SV_RAY_TELEPORT_AWAY	15
#define SV_RAY_SLEEP_MONSTER	16
#define SV_RAY_CONFUSE_MONSTER	17
#define SV_RAY_SLOW_MONSTER		18
#define SV_RAY_FEAR_MONSTER		19
#define SV_RAY_POLYMORPH		20
#define SV_RAY_STONE_TO_MUD		21
#
/* The "sval" codes for TV_APPARATUS (66)*/
#define SV_APPARATUS_RECALL				0
#define SV_APPARATUS_LIGHT				1
#define SV_APPARATUS_PISTOL_AMMO		2
#define SV_APPARATUS_RIFLE_AMMO			3
#define SV_APPARATUS_SHOTGUN_AMMO		4
#define SV_APPARATUS_RESTORE			5
#define SV_APPARATUS_DISARMING			6
#define SV_APPARATUS_ANTI_TELEPORT		7

/* The "sval" codes for TV_MECHANISM (70) */
#define SV_MECHANISM_DARKNESS				0
#define SV_MECHANISM_AGGRAVATE_MONSTER		1
#define SV_MECHANISM_CURSE_ARMOR			2
#define SV_MECHANISM_CURSE_WEAPON			3
#define SV_MECHANISM_SUMMON_MONSTER			4
#define SV_MECHANISM_SUMMON_UNDEAD			5
#define SV_MECHANISM_SUMMON_AUTOMATA		6
#define SV_MECHANISM_TRAP_CREATION			7
#define SV_MECHANISM_PHASE_DOOR				8
#define SV_MECHANISM_TELEPORT				9
#define SV_MECHANISM_TELEPORT_LEVEL			10
#define SV_MECHANISM_WORD_OF_RECALL			11
#define SV_MECHANISM_IDENTIFY				12
#define SV_MECHANISM_STAR_IDENTIFY			13
#define SV_MECHANISM_REMOVE_CURSE			14
#define SV_MECHANISM_STAR_REMOVE_CURSE		15
#define SV_MECHANISM_POWER_CELL				16
#define SV_MECHANISM_LIGHT					17
#define SV_MECHANISM_MAPPING				18
#define SV_MECHANISM_DETECT_GOLD			19
#define SV_MECHANISM_DETECT_ITEM			20
#define SV_MECHANISM_DETECT_TRAP			21
#define SV_MECHANISM_DETECT_DOOR			22
#define SV_MECHANISM_DETECT_INVIS			23
#define SV_MECHANISM_RUNE_OF_PROTECTION		24
#define SV_MECHANISM_TRAP_DOOR_DESTRUCTION	25
#define SV_MECHANISM_STAR_DESTRUCTION		26
#define SV_MECHANISM_ACQUIREMENT			27
#define SV_MECHANISM_STAR_ACQUIREMENT		28
#define SV_MECHANISM_MECHA_HEALING			29
#define SV_MECHANISM_MECHA_STAR_HEALING		30
#define SV_MECHANISM_MECHA_ENERGY			31
#define SV_MECHANISM_MECHA_STAR_ENERGY		32

/* The "sval" codes for TV_TONIC (75) */
#define SV_TONIC_WATER				0
#define SV_TONIC_APPLE_JUICE		1
#define SV_TONIC_SLIME_MOLD			2
/* xxx (fixed color) */
#define SV_TONIC_SLOWNESS			4
#define SV_TONIC_SALT_WATER			5
#define SV_TONIC_POISON				6
#define SV_TONIC_BLINDNESS			7
#define SV_TONIC_MUTAGEN			8
#define SV_TONIC_CONFUSION			9
#define SV_TONIC_MUTAGEN_ANTIDOTE	10
#define SV_TONIC_SLEEP				11
#define SV_TONIC_LOSE_MEMORIES		12
#define SV_TONIC_SKILL				13
#define SV_TONIC_DEC_MUS			14
#define SV_TONIC_DEC_AGI			15
#define SV_TONIC_DEC_VIG			16
#define SV_TONIC_DEC_SCH			17
#define SV_TONIC_DEC_EGO			18
#define SV_TONIC_DEC_CHR			19
#define SV_TONIC_INFRAVISION		20
#define SV_TONIC_DETECT_INVIS		21
#define SV_TONIC_SLOW_POISON		22
#define SV_TONIC_CURE_POISON		23
#define SV_TONIC_BOLDNESS			24
#define SV_TONIC_SPEED				25
#define SV_TONIC_HEROISM			26
#define SV_TONIC_BERSERK_STRENGTH	27
#define SV_TONIC_XXX1				28
#define SV_TONIC_CURE_LIGHT_HP		29
#define SV_TONIC_CURE_SERIOUS_HP	30
#define SV_TONIC_CURE_CRITICAL_HP	31
#define SV_TONIC_CURE_MORTAL_HP		32
#define SV_TONIC_HP_HEALING			33
#define SV_TONIC_HP_STAR_HEALING	34
#define SV_TONIC_CURE_MINOR_SP		35
#define SV_TONIC_CURE_LIGHT_SP		36
#define SV_TONIC_CURE_SERIOUS_SP	37
#define SV_TONIC_CURE_CRITICAL_SP	38
#define SV_TONIC_CURE_MORTAL_SP		39
#define SV_TONIC_SP_HEALING			40
#define SV_TONIC_SP_STAR_HEALING	41
#define SV_TONIC_LIFE				42
/* xxx */
#define SV_TONIC_RESTORE_EXP		44
#define SV_TONIC_RES_MUS			45
#define SV_TONIC_RES_AGI			46
#define SV_TONIC_RES_VIG			47
#define SV_TONIC_RES_SCH			48
#define SV_TONIC_RES_EGO			49
#define SV_TONIC_RES_CHR			50
#define SV_TONIC_INC_MUS			51
#define SV_TONIC_INC_AGI			52
#define SV_TONIC_INC_VIG			53
#define SV_TONIC_INC_SCH			54
#define SV_TONIC_INC_EGO			55
#define SV_TONIC_INC_CHR			56
#define SV_TONIC_AUGMENTATION		57
#define SV_TONIC_ENLIGHTENMENT		58
#define SV_TONIC_STAR_ENLIGHTENMENT	59
#define SV_TONIC_SELF_KNOWLEDGE		60
#define SV_TONIC_EXPERIENCE			61
/* add resistance tonics? */

/* The "sval" codes for TV_FOOD (80) */
#define SV_FOOD_POISON			0
#define SV_FOOD_BLINDNESS		1
#define SV_FOOD_PARANOIA		2
#define SV_FOOD_CONFUSION		3
#define SV_FOOD_HALLUCINATION	4
#define SV_FOOD_PARALYSIS		5
#define SV_FOOD_WEAKNESS		6
#define SV_FOOD_SICKNESS		7
#define SV_FOOD_STUPIDITY		8
#define SV_FOOD_NAIVETY			9
#define SV_FOOD_UNHEALTH		10
#define SV_FOOD_DISEASE			11
#define SV_FOOD_CURE_POISON		12
#define SV_FOOD_CURE_BLINDNESS	13
#define SV_FOOD_CURE_PARANOIA	14
#define SV_FOOD_CURE_CONFUSION	15
#define SV_FOOD_CURE_SERIOUS	16
#define SV_FOOD_RESTORE_MUS		17
#define SV_FOOD_RESTORE_VIG		18
#define SV_FOOD_RESTORING		19
#define SV_FOOD_LIGHT_HEALING	20
#define SV_FOOD_MARIJUANA		21
#define SV_FOOD_OPIUM			22
#define SV_FOOD_MUSHROOMS		23
#define SV_FOOD_COCAINE			24
#define SV_FOOD_TOBACCOS		25
/* many missing mushrooms */
#define SV_FOOD_BISCUIT			32
#define SV_FOOD_JERKY			33
#define SV_FOOD_PINT_OF_WINE	39
#define SV_FOOD_MUTTON			40
#define SV_FOOD_ONION			41
#define SV_FOOD_POTATO			42
/* New food types added by DH */
#define SV_FOOD_CHEESE			43
#define SV_FOOD_SAUSAGE_ROLL		44
#define SV_FOOD_CRUMPET			45
#define SV_FOOD_MEAT_PIE		46
#define SV_FOOD_SAVELOY			47
#define SV_FOOD_FRIED_FISH		48
#define SV_FOOD_KIDNEY_PUDDING	49
#define SV_FOOD_TURNIPS			50
#define SV_FOOD_PIGEON_PIE		51
#define SV_FOOD_BONBON			52
#define SV_FOOD_HADDOCKS		53
#define SV_FOOD_LEMONADE		54
#define SV_FOOD_TEA				55
#define SV_FOOD_PINT_ERDE_WINE	56
#define SV_FOOD_PINT_MINT_WATER	57


/* The "sval" codes for TV_MAGIC_BOOK (90)*/
#define SV_BOOK_MAGE1			 0
#define SV_BOOK_MAGE2			 1
#define SV_BOOK_MAGE3			 2
#define SV_BOOK_MAGE4			 3
#define SV_BOOK_MAGE5			 4
#define SV_BOOK_MAGE6			 5
#define SV_BOOK_MAGE7			 6
#define SV_BOOK_MAGE8			 7
#define SV_BOOK_MAGE9			 8
#define SV_BOOK_MAGE10			 9
#define SV_BOOK_PRIEST1			10
#define SV_BOOK_PRIEST2			11
#define SV_BOOK_PRIEST3			12
#define SV_BOOK_PRIEST4			13
#define SV_BOOK_PRIEST5			14
#define SV_BOOK_PRIEST6			15
#define SV_BOOK_PRIEST7			16
#define SV_BOOK_PRIEST8			17
#define SV_BOOK_DEVICE1			18
#define SV_BOOK_DEVICE2			19
#define SV_BOOK_DEVICE3			20
#define SV_BOOK_DEVICE4			21
#define SV_BOOK_DEVICE5			22
#define SV_BOOK_DEVICE6			23
#define SV_BOOK_DEVICE7			24
#define SV_BOOK_DEVICE8			25
#define SV_BOOK_DEVICE9			26
#define SV_BOOK_DEVICE10		27
/* xxx */
#define SV_BOOK_XXX1			29
#define SV_BOOK_XXX2			30
#define SV_BOOK_NECRONOMICON	31
#define SV_BOOK_XXX3			32

/* "Sval" limit - maximum amount of spellbooks */
#define SV_BOOK_MAX				42


/*
 * Bit flags for spellbooks
 */
#define SBF_MAGIC		0x01
#define SBF_PRAYER		0x02
#define SBF_DEVICE		0x04
#define SBF_XXX1		0x08
#define SBF_XXX2		0x10
#define SBF_GOOD		0x20
#define SBF_ARTIFACT	0x40

#define SBF_TYPE_MASK \
			(SBF_MAGIC | SBF_PRAYER | SBF_DEVICE | SBF_XXX1 | SBF_XXX2)

/*
 * Special "sval" limit -- first "normal" food
 */
#define SV_FOOD_MIN_FOOD	32

/*
 * Special "sval" limit -- first "aimed" APPARATUS
 */
#define SV_APPARATUS_MIN_DIRECTION	12

/*
 * Special "sval" limit -- first "large" chest
 */
#define SV_CHEST_MIN_LARGE	6

/*
 * Chest Svals 
 */
#define SV_RN_CHEST 0 		/* Ruined Chest */
#define SV_TB_CHEST 1		/* Travelling bag */
#define SV_DB_CHEST 2		/* Doctor's bag */
#define SV_LB_CHEST 3		/* Lockbox */
#define SV_BB_CHEST 4		/* Bandbox */
#define SV_HB_CHEST 5		/* Hat box */
#define SV_GB_CHEST 6		/* Gladstone Bag */
#define SV_CT_CHEST 7		/* Cabin Trunk */
#define SV_ST_CHEST 8		/* Steamer Trunk */
#define SV_CS_CHEST 9		/* Combination Safe */
#define SV_BC_CHEST 10		/* Briefcase */
#define SV_JB_CHEST 11		/* Jewelery Box */
#define SV_QUEST_CHEST	12	/* Quest Chest */

/* #define SV_CHEST_JEWELED_LARGE	20 */

/*
 * Special "sval" limit -- first "good" magic/prayer book
 */
#define SV_BOOK_MIN_GOOD	4




/*** Monster blow constants -- need replacing ***/
#define RBM_HIT		1	/* */
#define RBM_TOUCH	2	/* */
#define RBM_PUNCH	3	/* */
#define RBM_KICK	4	/* */
#define RBM_SLASH	5	/* */
#define RBM_PIERCE	6	/* */
#define RBM_BLUNT	7	/* */
#define RBM_LURE	8	/* */
#define RBM_XXX2	9	/* */
#define RBM_HOWL	10	/* */
#define RBM_CLAW	11	/* */
#define RBM_KISS	12	/* */
#define RBM_GRAB	13	/* */
#define RBM_BITE	14	/* */
#define RBM_STING	15	/* */
#define RBM_BUTT	16	/* */
#define RBM_CRUSH	17	/* */
#define RBM_ENGULF	18	/* */
#define RBM_CRAWL	19	/* */
#define RBM_DROOL	20	/* */
#define RBM_SPIT	21	/* */
#define RBM_XXX4	22	/* Will Be Steamroller */
#define RBM_XXX5	23	/* Worship? */
#define RBM_GAZE	24	/* */
#define RBM_WAIL 	25	/* */
#define RBM_SPORE	26	/* */
#define RBM_XXX6	27	/* Tentacle */
#define RBM_XXX7	28	/* Tounge */
#define RBM_ZAP		29	/* Zap */
#define RBM_PECK	30  /* */
#define RBM_SPEAK	31	/* */
#define RBM_BEG		32	/* */
#define RBM_SEDUCE	33	/* */
#define RBM_XXX10	34	/* Sings */


/*
 * New monster blow effects
 */
#define RBE_HURT		1
#define RBE_POISON		2
#define RBE_UN_BONUS	3
#define RBE_UN_POWER	4
#define RBE_EAT_GOLD	5
#define RBE_EAT_ITEM	6
#define RBE_EAT_FOOD	7
#define RBE_EAT_LITE	8
#define RBE_FIRE		9
#define RBE_ACID		10
#define RBE_ELEC		11
#define RBE_COLD		12
#define RBE_STEAM		13
#define RBE_NETHER		14
#define RBE_ETHER		15
#define RBE_BLIND		16
#define RBE_CONFUSE		17
#define RBE_TERRIFY		18
#define RBE_PARALYZE	19
#define RBE_LOSE_MUS	20
#define RBE_LOSE_AGI	21
#define RBE_LOSE_VIG	22
#define RBE_LOSE_SCH	23
#define RBE_LOSE_EGO	24
#define RBE_LOSE_CHR	25
#define RBE_LOSE_ALL	26
#define RBE_SHATTER		27
#define RBE_EXP_10		28
#define RBE_EXP_20		29
#define RBE_EXP_40		30
#define RBE_EXP_80		31

/*
 * -Bahman Rabii-
 * If a spell/wand/rod/etc calls fire_bolt() followed by fire_cloud()
 * and the targeted monster is killed by the first fire_bolt(), then
 * the target is cleared and the second fire_cloud() will start at
 * the character's location. For example:
 *
 *     fire_bolt(GF_POIS, dir, damroll(plev / 2, 11));
 *     fire_cloud(GF_POIS, dir, 30, 6);
 *
 * The solution is to remember the target, and if the monster is
 * killed by the fire_bolt() then the target is set to the location
 * the monster was at. The macros to do this are:
 *
 * TARGET_DECLARE  -- Declare some variables
 * TARGET_PRESERVE -- Remember the current target location
 * TARGET_RESTORE  -- Set the target to the saved location
 *
 * The above statements would now be written:
 *
 *     TARGET_DECLARE
 *     ...
 *     TARGET_PRESERVE
 *     fire_bolt(GF_POIS, dir, damroll(plev / 2, 11));
 *     TARGET_RESTORE
 *     fire_cloud(GF_POIS, dir, 30, 6);
 */

#define TARGET_DECLARE \
	int save_target_y = 0, save_target_x = 0; \
	bool save_target_set;

#define TARGET_PRESERVE \
	if ((dir == 5) && target_okay() && p_ptr->target_who) \
	{ \
		save_target_y = p_ptr->target_row; \
		save_target_x = p_ptr->target_col; \
		save_target_set = TRUE; \
	} \
	else save_target_set = FALSE;

#define TARGET_RESTORE \
	if (save_target_set && !p_ptr->target_set) \
		target_set_location(save_target_y, save_target_x);


/*** Function flags ***/

#define PROJECT_NO                  0
#define PROJECT_NOT_CLEAR           1
#define PROJECT_CLEAR               2

/*
 * Bit flags for the "project()", the "projectable()", and/or the
 * "project_path()" functions.
 *
 *   BEAM:  Work as a beam weapon (affect every grid passed through)
 *   ARC:   Act as an arc spell (a portion of a caster-centered ball)
 *   STAR:  Act as a starburst - a randomized ball
 *   BOOM:  Explode in some way
 *   WALL:  Affect one layer of any wall, even if not passable
 *   PASS:  Ignore walls entirely
 *   GRID:  Affect each grid in the "blast area" in some way
 *   ITEM:  Affect each object in the "blast area" in some way
 *   KILL:  Affect each monster in the "blast area" in some way
 *   PLAY:  Explicitly affect the player
 *   SAFE:  Hack -- do not affect monsters of caster's type
 *   HIDE:  Hack -- disable graphical effects of projection
 *   STOP:  Stop as soon as we hit a monster
 *   JUMP:  Jump directly to the target location
 *   THRU:  Continue "through" the target (used for projectiles)
 *   CHCK:  Note occupied grids, but do not stop at them
 *   ORTH:  Projection cannot move diagonally (used for wall spells)
 */

/* Projection types */
#define PROJECT_BEAM         0x00000001
#define PROJECT_ARC          0x00000002
#define PROJECT_STAR         0x00000004
#define PROJECT_XXX1         0x00000008
#define PROJECT_XXX2         0x00000010
#define PROJECT_XXX3         0x00000020

/* What projections do */
#define PROJECT_BOOM         0x00000040
#define PROJECT_WALL         0x00000080
#define PROJECT_PASS         0x00000100
#define PROJECT_XXX4         0x00000200
#define PROJECT_XXX5         0x00000400

/* What projections affect */
#define PROJECT_GRID         0x00000800
#define PROJECT_ITEM         0x00001000
#define PROJECT_KILL         0x00002000
#define PROJECT_PLAY         0x00004000
#define PROJECT_SAFE         0x00008000
#define PROJECT_XXX6         0x00010000
#define PROJECT_XXX7         0x00020000

/* Graphics */
#define PROJECT_HIDE         0x00040000
#define PROJECT_NO_REDRAW    0x00080000
#define PROJECT_XXX9         0x00100000

/* How projections travel */
#define PROJECT_STOP         0x00200000
#define PROJECT_JUMP         0x00400000
#define PROJECT_THRU         0x00800000
#define PROJECT_CHCK         0x01000000
#define PROJECT_ORTH         0x02000000
#define PROJECT_XX10         0x04000000

/*
 * An arc with a width (in degrees) less than this value will lose less
 * power over distance.
 */
#define ARC_STANDARD_WIDTH     90


/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT   0x01
#define ENCH_TODAM   0x02
#define ENCH_TOAC    0x04


/*
 * Bit flags for the "target_set" function XXX XXX XXX
 *
 *  KILL: Target monsters
 *  LOOK: Describe grid fully
 *  XTRA: Currently unused flag
 *  GRID: Select from all grids
 *  FIRE: Require line of fire
 */
#define TARGET_KILL    0x01
#define TARGET_LOOK    0x02
#define TARGET_XTRA    0x04
#define TARGET_GRID    0x08
#define TARGET_FIRE    0x10
#define TARGET_FREE	   0x20 


/*
 * Bit flags for the "monster_desc" function
 */
#define MDESC_OBJE		0x01	/* Objective (or Reflexive) */
#define MDESC_POSS		0x02	/* Possessive (or Reflexive) */
#define MDESC_IND1		0x04	/* Indefinites for hidden monsters */
#define MDESC_IND2		0x08	/* Indefinites for visible monsters */
#define MDESC_PRO1		0x10	/* Pronominalize hidden monsters */
#define MDESC_PRO2		0x20	/* Pronominalize visible monsters */
#define MDESC_HIDE		0x40	/* Assume the monster is hidden */
#define MDESC_SHOW		0x80	/* Assume the monster is visible */


/*
 * Bit flags for the "get_item" function
 */
#define USE_EQUIP		0x01	/* Allow equip items */
#define USE_INVEN		0x02	/* Allow inven items */
#define USE_FLOOR		0x04	/* Allow floor items */

/*
 * Modes for object usage functions
 *
 * Note:  Object descriptions are in data files.  It is certainly possible
 * to transfer all other modes (for spells and objects both) to data files,
 * but it is uncertain whether that would be a practical, rather than
 * philosophical, good thing.
 */
#define OBJECT_USE         1
#define OBJECT_INFO        2
#define OBJECT_THROW       3

/*
 * Effect index defines.
 */
#define EFFECT_EXPLOSION         1      /* A radiating explosion */

#define EFFECT_IRREGULAR_CLOUD   4      /* A standard lingering cloud */
#define EFFECT_SPHERE			 5		/* Flashing sphere */
#define EFFECT_DEATH_CLOUD       6      /* A cloud of death */
#define EFFECT_STATIC_WALL		 7		/* A static wall */
#define EFFECT_WALL              8      /* An advancing wall */
#define EFFECT_SEEKER_VORTEX     9      /* A seeking vortex */
#define EFFECT_RANDOM_DOTS      10      /* Lots of random dots */
#define EFFECT_SPIRIT_VORTEX    11      /* A seeking vortex */
#define EFFECT_WHIRLPOOL		13		/* A whirlpool */

/*** Player flags ***/


/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE		0x00000001L	/* Combine the pack */
#define PN_REORDER		0x00000002L	/* Reorder the pack */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS		0x00000001L	/* Calculate bonuses */
#define PU_TORCH		0x00000002L	/* Calculate torch radius */
/* xxx (many) */
#define PU_HP			0x00000010L	/* Calculate chp and mhp */
#define PU_MANA			0x00000020L	/* Calculate csp and msp */
#define PU_SPELLS		0x00000040L	/* Calculate spells */
/* xxx (many) */
#define PU_FORGET_VIEW	0x00010000L	/* Forget field of view */
#define PU_UPDATE_VIEW	0x00020000L	/* Update field of view */
/* xxx (many) */
#define PU_FORGET_FLOW	0x00100000L	/* Forget flow data */
#define PU_UPDATE_FLOW	0x00200000L	/* Update flow data */
/* xxx (many) */
#define PU_MONSTERS		0x10000000L	/* Update monsters */
#define PU_DISTANCE		0x20000000L	/* Update distances */
/* xxx */
#define PU_PANEL		0x80000000L	/* Update panel */


/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_MISC			0x00000001L	/* Display Race/Class */
#define PR_TITLE		0x00000002L	/* Display Title */
#define PR_LEV			0x00000004L	/* Display Level */
#define PR_EXP			0x00000008L	/* Display Experience */
#define PR_STATS		0x00000010L	/* Display Stats */
#define PR_ARMOR		0x00000020L	/* Display Armor */
#define PR_HP			0x00000040L	/* Display Hitpoints */
#define PR_MANA			0x00000080L	/* Display Mana */
#define PR_GOLD			0x00000100L	/* Display Gold */
#define PR_DEPTH		0x00000200L	/* Display Depth */
#define PR_CLASS		0x00000400L	/* RMG: Display player class title */
#define PR_HEALTH		0x00000800L	/* Display Health Bar */
#define PR_CUT			0x00001000L	/* Display Extra (Cut) */
#define PR_STUN			0x00002000L	/* Display Extra (Stun) */
#define PR_HUNGER		0x00004000L	/* Display Extra (Hunger) */
/* xxx */
#define PR_BLIND		0x00010000L	/* Display Extra (Blind) */
#define PR_CONFUSED		0x00020000L	/* Display Extra (Confused) */
#define PR_AFRAID		0x00040000L	/* Display Extra (Afraid) */
#define PR_POISONED		0x00080000L	/* Display Extra (Poisoned) */
#define PR_STATE		0x00100000L	/* Display Extra (State) */
#define PR_SPEED		0x00200000L	/* Display Extra (Speed) */
#define PR_LEVEL		0x00400000L	/* Display Extra (Levelgain) */
/* xxx */
#define PR_EXTRA		0x01000000L	/* Display Extra Info */
#define PR_BASIC		0x02000000L	/* Display Basic Info */
/* xxx */
#define PR_MAP			0x08000000L	/* Display Map */
/* xxx (many) */

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN		0x00000001L	/* Display inven/equip */
#define PW_EQUIP		0x00000002L	/* Display equip/inven */
#define PW_PLAYER_0		0x00000004L	/* Display player (basic) */
#define PW_PLAYER_1		0x00000008L	/* Display player (extra) */
/* xxx */
/* xxx */
#define PW_MESSAGE		0x00000040L	/* Display messages */
#define PW_OVERHEAD		0x00000080L	/* Display overhead view */
#define PW_MONSTER		0x00000100L	/* Display monster recall */
#define PW_OBJECT		0x00000200L	/* Display object recall */
/* xxx */
#define PW_SNAPSHOT		0x00000800L	/* Display snap-shot */
#define PW_VISIBLE		0x00001000L		/* Display monster visible list */
/* xxx */
#define PW_BORG_1		0x00004000L	/* Display borg messages */
#define PW_BORG_2		0x00008000L	/* Display borg status */


/*** Cave flags ***/


/*
 * Special cave grid flags
 */
#define CAVE_MARK         0x0001  /* memorized feature */
#define CAVE_GLOW         0x0002  /* self-illuminating */
#define CAVE_ICKY         0x0004  /* part of a vault */
#define CAVE_ROOM         0x0008  /* part of a room */
#define CAVE_SEEN         0x0010  /* actually seeable by the character */
#define CAVE_VIEW         0x0020  /* in character field of sight */
#define CAVE_TEMP         0x0040  /* temporary flag (hard-coded position) */
#define CAVE_WALL         0x0080  /* blocks line of sight */

#define CAVE_FIRE         0x0100  /* is in line of fire */
#define CAVE_XXX1         0x0200  /* has been hit by an effect */
#define CAVE_XXX2         0x0400  /*  */
#define CAVE_TRAP         0x0800  /* has at least one trap */
#define CAVE_ATT1         0x1000  /* Hack -- Lingering spell display */
#define CAVE_ATT2         0x2000  /* Hack -- Lingering spell display */
#define CAVE_ATT3         0x4000  /* Hack -- Lingering spell display */
#define CAVE_ATT4         0x8000  /* Hack -- Lingering spell display */



/*** Object flags ***/


/*
 * Chest trap flags (see "tables.c")
 */
#define CHEST_LOSE_MUS		0x0001
#define CHEST_LOSE_VIG		0x0002
#define CHEST_POISON		0x0004
#define CHEST_PARALYZE		0x0008
#define CHEST_EXPLODE		0x0010
#define CHEST_SUMMON		0x0020
#define CHEST_XXX1		0x0040
#define CHEST_XXX2		0x0080
#define CHEST_XXX3		0x0100
#define CHEST_XXX4		0x0200
#define CHEST_XXX5		0x0400


/*
 * Special Object Flags
 */
#define IDENT_SENSE		0x001	/* Item has been "sensed" */
#define IDENT_FIXED		0x002	/* Item has been "haggled" */
#define IDENT_EMPTY		0x004	/* Item charges are known */
#define IDENT_KNOWN		0x008	/* Item abilities are known */
#define IDENT_RUMOUR	0x010	/* Item background is known */
#define IDENT_MENTAL	0x020	/* Item information is known */
#define IDENT_CURSED	0x040	/* Item is temporarily cursed */
#define IDENT_BROKEN	0x080	/* Item is permanently worthless */
#define IDENT_QUEST		0x100	/* Item is a quest item */
#define IDENT_STORE		0x200	/* Item was generated in a store */

/*
 * The special inscriptions.
 */
#define INSCRIP_NULL            100
#define INSCRIP_SHATTERED        100+1
#define INSCRIP_WORTHLESS       100+2
#define INSCRIP_CURSED          100+3
#define INSCRIP_BROKEN          100+4
#define INSCRIP_AVERAGE         100+5
#define INSCRIP_GOOD            100+6
#define INSCRIP_EXCELLENT       100+7
#define INSCRIP_SPECIAL         100+8
#define INSCRIP_UNCURSED        100+9
#define INSCRIP_INDESTRUCTIBLE  100+10
#define INSCRIP_WEIRD			100+11
#define INSCRIP_TWISTED			100+12

/*
 * Number of special inscriptions, plus one.
 */
#define MAX_INSCRIP			13




/*
 * All objects use object flags.
 *
 * The first set of flags all depend on pval.  Because an object may have
 * several different pvals, each affecting any number of flags in the set,
 * the entire set is duplicated for each pval.  Should any flag be
 * affected by more than one pval, only the first pval is used.
 *
 * There are three sets of non pval-dependant flags:
 * "flags1" contains sustains and most weapon-specific attributes.
 * "flags2" contains immunities, resistances, and protections.
 * "flags3" contains everything else.
 */
#define TR_PVAL_MUS				0x00000001L   /* STR += pval */
#define TR_PVAL_AGI				0x00000002L   /* INT += pval */
#define TR_PVAL_VIG				0x00000004L   /* WIS += pval */
#define TR_PVAL_SCH				0x00000008L   /* DEX += pval */
#define TR_PVAL_EGO				0x00000010L   /* CON += pval */
#define TR_PVAL_CHR				0x00000020L   /* CHR += pval */
#define TR_PVAL_XXX6			0x00000040L   /* (open) */
#define TR_PVAL_XXX7			0x00000080L   /* (open) */

#define TR_PVAL_STEALTH			0x00000100L   /* Stealth      += pval * 1 */
#define TR_PVAL_SEARCH			0x00000200L   /* Search       += pval * 5 */
#define TR_PVAL_INFRA			0x00000400L   /* Infra        += pval * 1 */
#define TR_PVAL_TUNNEL			0x00000800L   /* Tunnel       += pval * 20 */
#define TR_PVAL_SPEED			0x00001000L   /* Speed        += pval * 1 */
#define TR_PVAL_MANA			0x00002000L   /* Mana         += pval * 20 */
#define TR_PVAL_HEALTH			0x00004000L   /* Health       += pval * 10 */
#define TR_PVAL_LIGHT	/*XXX*/	0x00008000L   /* Light        += pval * 1 */
#define TR_PVAL_SAVE			0x00010000L   /* Saving throw += pval * 1 */
#define TR_PVAL_MAGIC_MASTER	0x00020000L   /* Magic Bonus  += pval * 2 */
#define TR_PVAL_XXX18			0x00040000L   /* (reserved) */
#define TR_PVAL_XXX19			0x00080000L   /* (open) */

#define TR_PVAL_BLOWS			0x00100000L   /* Blows += pval */
#define TR_PVAL_SHOTS			0x00200000L   /* Shots += pval */
#define TR_PVAL_MIGHT			0x00400000L   /* Might += pval */
#define TR_PVAL_XX23			0x00800000L   /* (open) */
#define TR_PVAL_XX24			0x01000000L   /* (open) */
#define TR_PVAL_XX25			0x02000000L   /* (open) */
#define TR_PVAL_XX26			0x04000000L   /* (open) */
#define TR_PVAL_XX27			0x08000000L   /* (open) */
#define TR_PVAL_XX28			0x10000000L   /* (open) */
#define TR_PVAL_XX29			0x20000000L   /* (open) */
#define TR_PVAL_XX30			0x40000000L   /* (open) */
#define TR_PVAL_XX31			0x80000000L   /*  (open) */

#define TR1_SUST_MUS		0x00000001L	/* Sustain MUS */
#define TR1_SUST_AGI		0x00000002L	/* Sustain AGI */
#define TR1_SUST_VIG		0x00000004L	/* Sustain VIG */
#define TR1_SUST_SCH		0x00000008L	/* Sustain SCH */
#define TR1_SUST_EGO		0x00000010L	/* Sustain EGO */
#define TR1_SUST_CHR		0x00000020L	/* Sustain CHR */
#define TR1_XXX7			0x00000040L	/* (reserved) */
#define TR1_XXX8			0x00000080L	/* (reserved) */
#define TR1_SLAY_ANIMAL		0x00000100L	/* Weapon Slays animals */
#define TR1_SLAY_EVIL		0x00000200L	/* Weapon Slays animals */
#define TR1_SLAY_UNDEAD		0x00000400L	/* Weapon Slays animals */
#define TR1_SLAY_DEMON		0x00000800L	/* Weapon Slays animals */
#define TR1_SLAY_AUTOMATA	0x00001000L	/* Weapon Slays animals */
#define TR1_SLAY_DINOSAUR	0x00002000L	/* Weapon Slays animals */
#define TR1_SLAY_CONSTRUCT	0x00004000L	/* Weapon Slays animals */
#define TR1_SLAY_ELEMENTAL	0x00008000L	/* Weapon Slays animals */
#define TR1_SLAY_ALIEN		0x00010000L	/* Weapon slays animals */
#define TR1_SLAY_BEASTMAN	0x00020000L	/* Weapon Slays animals */
#define TR1_SLAY_CARDS		0x00040000L	/* Weapon Slays animals */
#define TR1_SLAY_XXX20		0x00080000L	/* (reserved for slay) */
#define TR1_SLAY_XXX21 		0x00100000L	/* (reserved for slay) */
#define TR1_SLAY_XXX22		0x00200000L	/* (reserved for slay) */
#define TR1_SLAY_XXX23		0x00400000L	/* (reserved for slay) */
#define TR1_SLAY_XXX24		0x00800000L	/* (reserved for slay) */
#define TR1_BRAND_FIRE		0x01000000L	/* Weapon is Fire Branded */
#define TR1_BRAND_ELEC		0x02000000L /* Weapon is Electricty Branded */
#define TR1_BRAND_ICE		0x04000000L /* Weapon is Ice Branded */
#define TR1_BRAND_ACID		0x08000000L /* Weapon is Acid Branded */
#define TR1_BRAND_POISON	0x10000000L	/* Weapon is Poison Branded */
#define TR1_BRAND_FORCE		0x20000000L	/* Weapon adds force */
#define TR1_BRAND_XXX31		0x40000000L	/* (reserved for brand) */
#define TR1_BRAND_XXX32		0x80000000L	/* (reserved for brand) */


#define TR2_IMPACT			0x00000001L	/* Weapon knocks opponent back*/
#define TR2_CRITICAL		0x00000002L	/* Weapon strikes powerful crits */
#define TR2_VAMPIRIC		0x00000004L	/* Weapon drains life */
#define TR2_THROW			0x00000008L	/* Weapon is balanced for throwing */
#define TR2_PERFECT_BALANCE	0x00000010L	/* Weapon is perfectly balanced (+tohit/dam/throw) */
#define TR2_VORPAL			0x00000020L	/* Weapon is supa-sharpe */
#define TR2_RETURN			0x00000040L	/* Returns to user */
#define TR2_EDGED			0x00000080L	/* Slashing/edged weapon */
#define TR2_BLUNT			0x00000100L	/* Blunt weapon */
#define TR2_PIERCE			0x00000200L	/* Pierceing weapon */
#define TR2_SLOW_DIGEST		0x00000400L	/* Slows Digestion */
#define TR2_FEATHER			0x00000800L	/* Feather Fall */
#define TR2_TELEPATHY		0x00001000L	/* Telepathy */
#define TR2_SEE_INVIS		0x00002000L	/* See Invisible */
#define TR2_FREE_ACT		0x00004000L	/* Free Action */
#define TR2_WRAITH			0x00008000L	/* Provides wraithform (passwall) */
#define TR2_BLESSED			0x00010000L	/* Weapon is blessed */
#define TR2_HOLD_LIFE		0x00020000L	/* Reduces XP drain */
#define TR2_REFLECT			0x00040000L	/* Reflection - NOT WORKING*/
#define TR2_INVISIBLE		0x00080000L	/* Invisiblity */
#define TR2_IMMUNE			0x00100000L	/* Item Immunity to Elemental attacks */
#define TR2_XXX22			0x00200000L /* (open) */
#define TR2_XXX23			0x00400000L	/* (open) */
#define TR2_XXX24			0x00800000L	/* (open) */
#define TR2_XXX25			0x01000000L	/* (open) */
#define TR2_XXX26			0x02000000L	/* (open) */
#define TR2_REGEN_25		0x04000000L	/* Regeneration 25% */
#define TR2_REGEN_50		0x08000000L	/* Regeneration 50% */
#define TR2_REGEN_75		0x10000000L	/* Regeneration 75% */
#define TR2_RES_CONFU		0x20000000L	/* Resist confusion */
#define TR2_RES_BLIND		0x40000000L	/* Resist blinding */
#define TR2_RES_FEAR		0x80000000L	/* Resist fear */

#define TR3_SH_FIRE			0x00000001L	/* Fire Shield */
#define TR3_SH_ELEC 		0x00000002L	/* Volt Shield */
#define TR3_SPINES			0x00000004L	/* Spines */
#define TR3_SH_ETHER		0x00000008L	/* Ether Shield - NOT WORKING*/
#define TR3_SH_XXX5			0x00000010L	/* (reserved Shield) */
#define TR3_SH_XXX6			0x00000020L	/* (reserved Shield) */
#define TR3_SH_XXX7			0x00000040L	/* (reserved Shield) */
#define TR3_AUTOMATA		0x00000080L	/* Player is an Automata (hack) */
#define TR3_ACTIVATE		0x00000100L /* Item can be activated */
#define TR3_INSTA_ART		0x00000200L /* Item makes an artifact */
#define TR3_EASY_KNOW		0x00000400L /* Item is known if aware */
#define TR3_HIDE_TYPE		0x00000800L /* Item hides description */
#define TR3_SHOW_MODS		0x00001000L	/* Item shows Tohit/Todam */
#define TR3_NO_FUEL			0x00002000L	/* Requires no fuel */
#define TR3_MECHA_GEN		0x00004000L	/* Only generated for Automata */
#define TR3_XXX16			0x00008000L	/* (open) */
#define TR3_TELEPORT		0x00010000L	/* Random Teleportation */
#define TR3_EARTHQUAKE		0x00020000L	/* Item causes earthquakes */
#define TR3_NEVER_BLOW		0x00040000L	/* Cannot attack with item */
#define TR3_NO_TELEPORT		0x00080000L	/* No Teleportation*/
#define TR3_NO_MAGIC		0x00100000L	/* No Spellcasting */
#define TR3_DRAIN_EXP		0x00200000L	/* Drain Experience */
#define TR3_DRAIN_HP		0x00400000L	/* Drain Hit Points */
#define TR3_DRAIN_SP		0x00800000L	/* Drain Spell points */
#define TR3_DRAIN_ITEM		0x01000000L	/* Drain Item charges - NOT WORKING*/
#define TR3_AGGRAVATE		0x02000000L	/* Aggravate monsters */
#define TR3_DISRUPT_SPELL	0x04000000L	/* Increases Fail Rate */
#define TR3_MUTABLE			0x08000000L	/* Item Mutates user */
#define TR3_XXX29			0x10000000L	/* (reserved) */
#define TR3_LIGHT_CURSE		0x20000000L	/* Item has Light Curse */
#define TR3_HEAVY_CURSE		0x40000000L	/* Item has Heavy Curse */
#define TR3_PERMA_CURSE		0x80000000L	/* Item has Perma Curse */
/* ALL FLAGS ABOVE THIS LINE (excepting reflect) ARE WORKING */


/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_MASK \
	(TR1_MUS | TR1_AGI | TR1_VIG | TR1_SCH | \
	 TR1_EGO | TR1_CHR | TR1_XXX1 | TR1_XXX2 | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | \
	 TR1_SPEED | TR1_BLOWS | TR1_SHOTS | TR1_MIGHT)

/*
 * Hack -- special "xtra" object flag info (type)
 */
#define OBJECT_XTRA_TYPE_SUSTAIN	1
#define OBJECT_XTRA_TYPE_RESIST		2
#define OBJECT_XTRA_TYPE_POWER		3

#define OBJECT_XTRA_TYPE_MID_RESIST		4
#define OBJECT_XTRA_TYPE_HIGH_RESIST	5


/*
 * Hack -- special "xtra" object flag info (what flag set)
 */
#define OBJECT_XTRA_WHAT_SUSTAIN	2
#define OBJECT_XTRA_WHAT_RESIST		2
#define OBJECT_XTRA_WHAT_POWER		3

/*
 * Hack -- special "xtra" object flag info (base flag value)
 */
#define OBJECT_XTRA_BASE_SUSTAIN	TR2_SUST_MUS
#define OBJECT_XTRA_BASE_RESIST		TR2_RES_POIS
#define OBJECT_XTRA_BASE_POWER		TR3_SLOW_DIGEST

/*
 * Hack -- special "xtra" object flag info (number of flags)
 */
#define OBJECT_XTRA_SIZE_SUSTAIN	6
#define OBJECT_XTRA_SIZE_RESIST		12
#define OBJECT_XTRA_SIZE_POWER		8


/*** Class flags ***/

#define CF_EXTRA_SHOT		0x00000001L	/* Extra shots */
#define CF_BRAVERY_30		0x00000002L	/* Gains resist fear at plev 30 */
#define CF_BLESS_WEAPON		0x00000004L	/* Requires blessed/hafted weapons */
#define CF_CUMBER_GLOVE		0x00000008L	/* Gloves disturb spellcasting */
#define CF_ZERO_FAIL		0x00000010L /* Fail rates can reach 0% */
#define CF_BEAM				0x00000020L /* Higher chance of spells beaming */
#define CF_XXX9				0x00000040L	/* Allow choice of spells */
#define CF_XXX10			0x00000080L /*  */
#define CF_XXX11			0x00000100L /*  */
#define CF_ARCANE			0x00000200L /* Use Spellbooks */
#define CF_SECULAR			0x00000400L /* Use Devices */
#define CF_POWER			0x00000800L /* spells powerful */
#define CF_PSEUDO_ID1		0x00001000L /* very slow ID */
#define CF_PSEUDO_ID2		0x00002000L /* slow ID */
#define CF_PSEUDO_ID3		0x00004000L /* fast level */
#define CF_PSEUDO_ID4		0x00008000L /* very fast level */
#define CF_PSEUDO_ID_HEAVY	0x00010000L /* 'Heavy' Pseudo ID */
#define CF_XXX20			0x00020000L /* Use special combat Techniques */
#define CF_XXX21			0x00040000L /* use Nature powers */
#define CF_XXX22			0x00080000L /* Use Ninjitsu */
#define CF_ANARCHIST		0x00100000L /* Mutate on Level gain */
#define CF_MUTABLE			0x00200000L /* Mutate less often */
#define CF_XXX23			0x00400000L
#define CF_XXX24			0x00800000L
#define CF_XXX25			0x01000000L
#define CF_XXX26			0x02000000L
#define CF_XXX27			0x04000000L
#define CF_XXX28			0x08000000L
#define CF_XXX29			0x10000000L
#define CF_XXX30			0x20000000L
#define CF_XXX31			0x40000000L
#define CF_XXX32			0x80000000L


/* class craft */
#define CLASS_POWER_BREAK_ONE	7
#define CLASS_POWER_BREAK_TWO	13
#define MAX_CLASS_POWERS		21

#define MIND_OFFICER		0
#define MIND_AESTHETE		1
#define MIND_EXPLORER		2
#define MIND_MEDIUM			3
#define MIND_RECKONER		4
#define MIND_TOURIST		5
#define MIND_HUSSAR			6
#define MIND_NATURE			7
#define MIND_NINJA			8
#define MIND_QABALIST		9

/*** Monster flags ***/

/*
 * Special monster flags
 */
#define MFLAG_VIEW         0x0001  /* 0	Monster is in line of sight */
#define MFLAG_DLIM         0x0002  /* 2	Knowledge of monster is limited */
#define MFLAG_MIME         0x0004  /* 4	Monster is a hidden mimic */
#define MFLAG_ACTV         0x0008  /* 8	Monster is in active mode */
#define MFLAG_MOVE         0x0010  /* 16	Monster has moved */
#define MFLAG_TEMP         0x0020  /* 32	Monster is temporarily marked */
#define MFLAG_FULL         0x0040  /* 64	Monster has full required visibility */
#define MFLAG_MARK         0x0080  /* 128	Monster has some required visibility */

#define MFLAG_TOWN         0x0100  /* 256	Monster is using "townsman" AI */
#define MFLAG_MADD         0x0200  /* 512	Monster is maddened */
#define MFLAG_DOOM         0x0400  /* 1024	Monster is doomed */
#define MFLAG_SHOW         0x0800  /* 2048	Monster is detected */
#define MFLAG_BORN         0x1000  /* OLD--Monster is still being born */
#define MFLAG_NICE         0x2000  /* OLD--Monster is still being nice */
#define MFLAG_CLON         0x4000  /* Monster is a clone. */
#define MFLAG_XXX6         0x8000  /*  */

/* Spell Desire Table Columns */
#define D_BASE     0
#define D_SUMM     1
#define D_HURT     2
#define D_MANA     3
#define D_ESC      4
#define D_TACT     5
#define D_RES      6
#define D_RANGE    7

/*
 * Monsters will run up to 25 grids away
 */
#define FLEE_RANGE      MAX_SIGHT + 5

/*
 * Hack -- Panicked monsters will run far, far away
 */
#define PANIC_RANGE      100

/*
 * Some bit-flags for the "smart" field of "monster_type".
 *
 * Most of these map to the "TR2_xxx" flags.
 */
#define SM_PET			0x00000001
#define SM_FRIENDLY		0x00000002
#define SM_OPP_FIRE		0x00000004
#define SM_OPP_EARTH	0x00000008
#define SM_OPP_AIR		0x00000010
#define SM_OPP_WATER	0x00000020
#define SM_OPP_ELEC		0x00000040
#define SM_OPP_ICE		0x00000080
#define SM_OPP_ACID		0x00000100
#define SM_OPP_POISON	0x00000200
#define SM_OPP_TIME		0x00000400
#define SM_OPP_ETHER	0x00000800
#define SM_OPP_SOUND	0x00001000
#define SM_OPP_NETHER	0x00002000
#define SM_OPP_LIGHT	0x00004000
#define SM_OPP_DARK		0x00008000
#define SM_OPP_PSI		0x00010000
#define SM_OPP_TK		0x00020000
#define SM_OPP_SPIRIT	0x00040000
#define SM_XXX1			0x00080000
#define SM_XXX2			0x00100000
#define SM_XXX3			0x00200000
#define SM_XXX4			0x00400000
#define SM_XXX5			0x00800000
#define SM_XXX6			0x01000000
#define SM_GOOD_SAVE	0x02000000
#define SM_PERF_SAVE	0x04000000
#define SM_IMM_FEAR		0x08000000
#define SM_IMM_BLIND	0x10000000
#define SM_IMM_CONFU	0x20000000
#define SM_IMM_FREE		0x40000000
#define SM_IMM_MANA		0x80000000

/*
 * New monster race bit flags -- NEED to add vulnerabilties.
 */
#define RF1_UNIQUE			0x00000001	/* Unique Monster */
#define RF1_QUESTOR			0x00000002	/* Quest Monster */
#define RF1_MALE			0x00000004	/* Male gender */
#define RF1_FEMALE			0x00000008	/* Female gender */
#define RF1_CHAR_CLEAR		0x00000010	/* Absorbs symbol */
#define RF1_CHAR_MULTI		0x00000020	/* Changes symbol */
#define RF1_ATTR_CLEAR		0x00000040	/* Absorbs color */
#define RF1_ATTR_MULTI		0x00000080	/* Changes color */
#define RF1_FORCE_DEPTH		0x00000100	/* Start at "correct" depth */
#define RF1_FIXED_HPS		0x00000200	/* Start with max hitpoints */
#define RF1_FORCE_SLEEP		0x00000400	/* Start out sleeping */
#define RF1_FORCE_EXTRA		0x00000800	/* Start out something */
#define RF1_FRIEND			0x00001000	/* Arrive with a friend */
#define RF1_FRIENDS			0x00002000	/* Arrive with some friends */
#define RF1_ESCORT			0x00004000	/* Arrive with an escort */
#define RF1_ESCORTS			0x00008000	/* Arrive with some escorts */
#define RF1_NEVER_BLOW		0x00010000	/* Never make physical blow */
#define RF1_NEVER_MOVE		0x00020000	/* Never make physical move */
#define RF1_RAND_25			0x00040000	/* Moves randomly (25%) */
#define RF1_RAND_50			0x00080000	/* Moves randomly (50%) */
#define RF1_ONLY_GOLD		0x00100000	/* Drop only gold */
#define RF1_ONLY_ITEM		0x00200000	/* Drop only items */
#define RF1_DROP_5			0x00400000	/* Drop an item/gold (5%) */
#define RF1_DROP_10			0x00800000	/* Drop an item/gold (10%) */
#define RF1_DROP_20			0x01000000	/* Drop an item/gold (20%) */
#define RF1_DROP_40			0x02000000	/* Drop an item/gold (40%)  */
#define RF1_DROP_80			0x04000000	/* Drop an item/gold (80%)  */
#define RF1_DROP_1D2		0x08000000	/* Drop 1d2 items/gold */
#define RF1_DROP_GOOD		0x10000000	/* Drop good items */
#define RF1_DROP_GREAT		0x20000000	/* Drop great items */
#define RF1_DROP_USEFUL		0x40000000	/* Drop "useful" items */
#define RF1_DROP_CHOSEN		0x80000000	/* Drop "chosen" items */

/*
 * New monster race bit flags 
 */
#define RF2_STUPID			0x00000001	/* Monster is stupid */
#define RF2_SMART			0x00000002	/* Monster is smart */
#define RF2_FRIENDLY 		0x00000004	/* Monster is friendly */
#define RF2_HOSTILE			0x00000008	/* Monster is agressive */
#define RF2_INVISIBLE		0x00000010	/* Monster avoids vision */
#define RF2_COLD_BLOOD		0x00000020	/* Monster avoids infravision */
#define RF2_EMPTY_MIND		0x00000040	/* Monster avoids telepathy / immune to psi */
#define RF2_WEIRD_MIND		0x00000080	/* Monster avoids telepathy sometimes / risky psi */
#define RF2_MULTIPLY		0x00000100	/* Monster reproduces */
#define RF2_REGENERATE		0x00000200	/* Monster regenerates */
#define RF2_XXX1			0x00000400	/* Fire Aura */
#define RF2_XXX2			0x00000800	/* Earth Aura */
#define RF2_XXX3			0x00001000	/* Wind Aura */
#define RF2_GASEOUS			0x00002000	/* Monster is not solid */
#define RF2_TRACKER			0x00004000	/* Monster is a good tracker */
#define RF2_IMPENT			0x00008000	/* Monster is supa-tough */
#define RF2_POWERFUL		0x00010000	/* Monster has Powerful Breath */
#define RF2_OPEN_DOOR		0x00020000	/* Monster can open doors */
#define RF2_BASH_DOOR		0x00040000	/* Monster can bash doors */
#define RF2_PASS_WALL		0x00080000	/* Monster can pass walls */
#define RF2_KILL_WALL		0x00100000	/* Monster can destroy walls */
#define RF2_KILL_BODY		0x00200000	/* Monster can kill monsters */
#define RF2_TAKE_ITEM		0x00400000	/* Monster can pick up items */
#define RF2_KILL_ITEM		0x00800000	/* Monster can crush items */
#define RF2_LOW_MANA_RUN	0x01000000	/* Runs away/teleports when low on mana or mana == 0 */
#define RF2_ARCHER			0x02000000	/* No 1_IN_X limits on missiles */
#define RF2_BRAIN_1 		0x04000000	/* Future AI */
#define RF2_BRAIN_2			0x08000000	/* Future AI */
#define RF2_BRAIN_3			0x10000000  /* Future AI */
#define RF2_BRAIN_4			0x20000000	/* Future AI */
#define RF2_BRAIN_5			0x40000000	/* Future AI */
#define RF2_BRAIN_6			0x80000000	/* Future AI */

/*
 * New monster race bit flags
 */
#define RF3_AUTOMATA		0x00000001	/* Automata */
#define RF3_DINOSAUR		0x00000002	/* Dinosaur */
#define RF3_CONSTRUCT		0x00000004	/* Construct */
#define RF3_ELEMENTAL		0x00000008	/* Elemental */
#define RF3_DEMON			0x00000010	/* Demon */
#define RF3_UNDEAD			0x00000020	/* Undead */
#define RF3_EVIL			0x00000040	/* Evil */
#define RF3_ANIMAL			0x00000080	/* Animal */
#define RF3_ALIEN			0x00000100	/* Alien */
#define RF3_BEASTMAN		0x00000200	/* Beastman */
#define RF3_PLANT			0x00000400	/* Plant */
#define RF3_HURT_LIGHT		0x00000800	/* Hurt by light */
#define RF3_HURT_ROCK		0x00001000	/* Hurt by rock remover */
#define RF3_IM_FIRE			0x00002000	/* Resistant to Fire */
#define RF3_IM_EARTH		0x00004000	/* Resistant to Earth */
#define RF3_IM_AIR			0x00008000	/* Resistant to Air */
#define RF3_IM_WATER		0x00010000	/* Resistant to Water */
#define RF3_IM_ELEC			0x00020000	/* Resistant to Elec */
#define RF3_IM_ICE			0x00040000	/* Resistant to Ice */
#define RF3_IM_ACID			0x00080000	/* Resistant to Acid */
#define RF3_IM_POIS			0x00100000	/* Resistant to Pois */
#define RF3_IM_TIME			0x00200000	/* Resistant to Time */
#define RF3_IM_ETHER		0x00400000	/* Resistant to Ether */
#define RF3_IM_SOUND		0x00800000	/* Resistant to Sound */
#define RF3_IM_NETHER		0x01000000	/* Resistant to Nether */
#define RF3_IM_PIERCE		0x02000000	/* Resistant to Pierced weapsons */
#define RF3_IM_EDGED		0x04000000	/* Resistant to Edged weapons */
#define RF3_IM_BLUNT		0x08000000	/* Resistant to Blunt weapons */
#define RF3_NO_FEAR			0x10000000	/* Cannot be scared */
#define RF3_NO_STUN			0x20000000	/* Cannot be stunned */
#define RF3_NO_CONF			0x40000000	/* Cannot be confused */
#define RF3_NO_SLEEP		0x80000000	/* Cannot be slept */

/*
 * New monster race bit flags - argh. :-/
 */
#define RF4_SHRIEK			0x00000001	/* Shriek for help */
#define RF4_LASH			0x00000002	/* Lash out with whip or tounge */
#define RF4_ARROW			0x00000004	/* Fire an arrow */
#define RF4_GUN				0x00000008	/* Fire a gun */
#define RF4_RIFLE			0x00000010	/* Fire a rifle */
#define RF4_SHOTGUN			0x00000020	/* FIre a shotgun */
#define RF4_ROCKET			0x00000040	/* Fire a rocket */
#define RF4_MISSILE			0x00000080	/* Fire a missile */
#define RF4_BR_FIRE			0x00000100	/* Breathe Fire */
#define RF4_BR_EARTH		0x00000200	/* Breathe Earth */
#define RF4_BR_AIR			0x00000400	/* Breathe Air */
#define RF4_BR_WATER		0x00000800	/* Breathe Water */
#define RF4_BR_ELEC			0x00001000	/* Breathe Elec/lightning */
#define RF4_BR_ICE			0x00002000	/* Breathe Ice */
#define RF4_BR_ACID			0x00004000	/* Breathe Acid */
#define RF4_BR_POISON		0x00008000	/* Breathe Poison */
#define RF4_BR_TIME			0x00010000	/* Breathe Time */
#define RF4_BR_ETHER		0x00020000	/* Breathe Ether */
#define RF4_BR_SOUND		0x00040000	/* Breathe Sound */
#define RF4_BR_NETHER		0x00080000	/* Breathe Nether */
#define RF4_BR_GRAVITY		0x00100000	/* Breathe Gravity */
#define RF4_BR_RAD			0x00200000	/* Breathe Rad */
#define RF4_BR_LIGHT		0x00400000	/* Breathe Light */
#define RF4_BR_DARK			0x00800000	/* Breathe Dark */
#define RF4_CLOUD_RAD		0x01000000	/* Radiation Cloud */
#define RF4_CLOUD_POISON	0x02000000	/* Poison Cloud */
#define RF4_XXX3			0x04000000	/* (?) */
#define RF4_XXX4			0x08000000	/* (?) */
#define RF4_XXX5			0x10000000  /* (?) */
#define RF4_XXX6			0x20000000  /* (?) */
#define RF4_XXX7			0x40000000	/* Nether Fog */
#define RF4_XXX8			0x80000000	/* Poison Fog */

/*
 * New monster race bit flags
 */
#define RF5_BA_FIRE			0x00000001	/* Fire Ball -> Fire Storm */
#define RF5_BA_EARTH		0x00000002	/* Earth Ball -> Earth Storm */
#define RF5_BA_AIR			0x00000004	/* Air Ball -> Air Storm */
#define RF5_BA_WATER		0x00000008	/* Water Ball -> Water Storm */
#define RF5_BA_ELEC			0x00000010	/* Elec Ball -> Elec Storm */
#define RF5_BA_ICE			0x00000020	/* Ice Ball -> Ice Storm */
#define RF5_BA_ACID			0x00000040	/* Acid Ball -> Acid Storm */
#define RF5_BA_POISON		0x00000080	/* Poison Ball -> Poison Storm */
#define RF5_BA_TIME			0x00000100	/* Time Ball -> Time Storm */
#define RF5_BA_ETHER		0x00000200	/* Ether Ball -> Ether Storm */
#define RF5_BA_SOUND		0x00000400	/* Sound Ball -> Sound Storm */
#define RF5_BA_NETHER		0x00000800	/* Nether Ball -> Nether Storm */
#define RF5_BA_GRAVITY		0x00001000	/* Gravity Ball -> Gravity Storm */
#define RF5_BA_EMP			0x00002000	/* Emp Ball -> EMP Storm */
#define RF5_BA_RAD			0x00004000	/* Radiation Ball -> Radation Storm */
#define RF5_XXX1			0x00008000	/* (?) */
#define RF5_BO_FIRE			0x00010000	/* Fire Bolt */
#define RF5_BO_EARTH		0x00020000	/* Earth Bolt */
#define RF5_BO_AIR			0x00040000	/* Air Bolt */
#define RF5_BO_WATER		0x00080000	/* Water Bolt */
#define RF5_BO_ELEC			0x00100000	/* Elec Bolt */
#define RF5_BO_ICE			0x00200000	/* Ice Bolt */
#define RF5_BO_ACID			0x00400000	/* Acid Bolt */
#define RF5_BO_POISON		0x00800000	/* Poison Bolt */
#define RF5_BO_TIME			0x01000000	/* Time Bolt */
#define RF5_BO_ETHER		0x02000000	/* Ether Bolt */
#define RF5_BO_SOUND		0x04000000	/* Sound Bolt */
#define RF5_BO_NETHER		0x08000000	/* Nether Bolt */
#define RF5_BO_GRAVITY		0x10000000	/* Gravity Bolt */
#define RF5_BO_DARK			0x20000000	/* Dark Bolt */
#define RF5_XXX3			0x40000000	/* (?) */
#define RF5_XXX4			0x80000000	/* (?) */

/*
 * New monster race bit flags
 */
#define RF6_HASTE			0x00000001	/* Speed self */
#define RF6_CURE			0x00000002	/* Cure self */
#define RF6_HEAL			0x00000004	/* Heal self */
#define RF6_ADD_MANA		0x00000008	/* Regain Mana */
#define RF6_BLINK			0x00000010	/* Teleport Short */
#define RF6_TPORT			0x00000020	/* Teleport Long */
#define RF6_XXX1			0x00000040	/* (?) */
#define RF6_XXX2			0x00000080	/* (?) */
#define RF6_TELE_TO			0x00000100	/* Move player to monster */
#define RF6_TELE_AWAY		0x00000200	/* Move player far away */
#define RF6_TELE_LEVEL		0x00000400	/* Move player vertically */
#define RF6_TELE_SELF_TO	0x00000800	/* Move monster to player */
#define RF6_DARKNESS		0x00001000	/* Create Darkness */
#define RF6_TRAPS			0x00002000	/* Create Traps */
#define RF6_FORGET			0x00004000	/* Cause Amnesia */
#define RF6_FEAR			0x00008000	/* Cause Fear */
#define RF6_PSI				0x00010000	/* Cause Mind Blast */
#define RF6_DOMINATION		0x00020000	/* Cause Brain Smash */
#define RF6_STUN			0x00040000	/* Cause Stun */
#define RF6_TK				0x00080000	/* Cause Stun, Fling Player */
#define RF6_FORCE			0x00100000	/* Cause Stun, Fling Player, Smash Walls */
#define RF6_CONFUSION		0x00200000	/* Cause Confusion */
#define RF6_SPIRIT			0x00400000	/* Call Spirits to Assail */
#define RF6_ECTOPLASM		0x00800000	/* Causing Ectoplasmic Shift */
#define RF6_BLIND			0x01000000	/* Cause Blindness */
#define RF6_SLOW			0x02000000	/* Cause Slowing */
#define RF6_HOLD			0x04000000	/* Cause Paralyzation */
#define RF6_DRAIN_MANA		0x08000000	/* Drain Mana */
#define RF6_CHARGE			0x10000000	/* Charge the player */
#define RF6_XXX4			0x20000000	/* (?) */
#define RF6_XXX5			0x40000000	/* (?) */
#define RF6_MIRROR_IMAGE	0x80000000	/* Clone self (Fu Manchu only) */


/*
 * New monster race bit flags
 */
#define RF7_BE_FIRE		    0x00000001  /* Fire Beam */
#define RF7_BE_ELEC			0x00000002	/* Elec Beam */
#define RF7_BE_WATER		0x00000004	/* Water Beam */
#define RF7_XXX7X4			0x00000008	/* (?) */
#define RF7_XXX7X5			0x00000010	/* (?) */
#define RF7_XXX7X6			0x00000020	/* (?) */
#define RF7_XXX7X7			0x00000040	/* (?) */
#define RF7_XXX7X8			0x00000080	/* (?) */
#define RF7_XXX7X9			0x00000100	/* (?) */
#define RF7_XXX7X10			0x00000200	/* (?) */
#define RF7_XXX7X11			0x00000400	/* (?) */
#define RF7_XXX7X12			0x00000800	/* (?) */
#define RF7_XXX7X13			0x00001000	/* (?) */
#define RF7_XXX7X14			0x00002000	/* (?) */
#define RF7_S_CUTTENCLIP			0x00004000	/* HACK Summon Cuttenclip Monsters */
#define RF7_S_BEASTMEN		0x00008000	/* Summon Beastmen*/
#define RF7_S_PLANTS		0x00010000	/* Summon Plants */
#define RF7_S_KIN			0x00020000	/* Summon kin */
#define RF7_S_HI_DEMON		0x00040000	/* Summon High Demon */
#define RF7_S_MONSTER		0x00080000	/* Summon Monster */
#define RF7_S_MONSTERS		0x00100000	/* Summon Monsters */
#define RF7_S_AUTOMATA		0x00200000	/* Summon Automata */
#define RF7_S_SPIDER		0x00400000	/* Summon Spider */
#define RF7_S_HOUND			0x00800000	/* Summon Hound */
#define RF7_S_MONKEY		0x01000000	/* Summon Monkey */
#define RF7_S_ALIEN			0x02000000	/* Summon Alien */
#define RF7_S_DEMON			0x04000000	/* Summon Demon */
#define RF7_S_UNDEAD  		0x08000000	/* Summon Undead */
#define RF7_S_ELEMENTAL		0x10000000	/* Summon Elemental */
#define RF7_S_HI_UNDEAD		0x20000000	/* Summon High Undead */
#define RF7_S_HI_ELEMENTAL	0x40000000	/* Summon High Elemental */
#define RF7_S_UNIQUE		0x80000000	/* Summon Uniques */

/*
 * New monster race bit flags
 */
#define RF8_VUN_FIRE	    0x00000001  /* Vunerability to fire */
#define RF8_VUN_EARTH		0x00000002	/* Vunerability to earth */
#define RF8_VUN_AIR			0x00000004	/* Vunerability to air */
#define RF8_VUN_WATER		0x00000008	/* Vunerability to water */
#define RF8_VUN_ELEC		0x00000010	/* Vunerability to electricty */
#define RF8_VUN_ICE			0x00000020	/* Vunerability to ice */
#define RF8_VUN_ACID		0x00000040	/* Vunerability to acid */
#define RF8_VUN_POIS		0x00000080	/* Vunerability to poison */
#define RF8_VUN_TIME		0x00000100	/* Vunerability to time */
#define RF8_VUN_ETHER		0x00000200	/* Vunerability to ether */
#define RF8_VUN_SOUND		0x00000400	/* Vunerability to sound */
#define RF8_VUN_NETHER		0x00000800	/* Never used */
#define RF8_VUN_PIERCE		0x00001000	/* Vunerability to pierce */
#define RF8_VUN_EDGED		0x00002000	/* Vunerability to edged */
#define RF8_VUN_BLUNT		0x00004000	/* Vunerability to blunt */
#define RF8_XXX7X16			0x00008000	/* (?) */
#define RF8_XXX7X17			0x00010000	/* (?) */
#define RF8_XXX7X18			0x00020000	/* (?) */
#define RF8_XXX7X19			0x00040000	/* (?) */
#define RF8_XXX7X20			0x00080000	/* (?) */
#define RF8_XXX7X21			0x00100000	/* (?) */
#define RF8_XXX7X22			0x00200000	/* (?) */
#define RF8_XXX7X23			0x00400000	/* (?) */
#define RF8_XXX7X24			0x00800000	/* (?) */
#define RF8_XXX7X25			0x01000000	/* (?) */
#define RF8_XXX7X26			0x02000000	/* (?) */
#define RF8_XXX7X27			0x04000000	/* (?) */
#define RF8_XXX7X28  		0x08000000	/* (?) */
#define RF8_XXX7X29			0x10000000	/* (?) */
#define RF8_XXX7X30			0x20000000	/* (?) */
#define RF8_CUTTENCLIP			0x40000000	/* HACK- for Miss Cuttenclip */
#define RF8_CLOUD_SURROUND	0x80000000	/* (?) */

/*
 * Some flags are obvious
 */
#define RF1_OBVIOUS_MASK \
	(RF1_UNIQUE | RF1_QUESTOR | RF1_MALE | RF1_FEMALE | \
	 RF1_FRIEND | RF1_FRIENDS | RF1_ESCORT | RF1_ESCORTS)

/*
 * "race" flags
 */
#define RF3_RACE_MASK \
	(RF3_AUTOMATA | RF3_DINOSAUR | RF3_CONSTRUCT | RF3_ELEMENTAL | \
	 RF3_DEMON | RF3_UNDEAD | RF3_EVIL | RF3_ANIMAL | RF3 ALIEN | \
	 RF3_BEASTMAN | RF3_PLANT)

/*
 * Hack -- Bit masks to control what spells are considered
 */

/*
 * Attack spells.
 * Need special treatment in movement AI.
 */
#define RF4_ATTACK_MASK \
	(RF4_ARROW | RF4_GUN | RF4_RIFLE | RF4_SHOTGUN | RF4_ROCKET | \
	 RF4_MISSILE | RF4_BR_FIRE | RF4_BR_EARTH | RF4_BR_AIR | RF4_BR_WATER | \
	 RF4_BR_ELEC | RF4_BR_ICE | RF4_BR_ACID | RF4_BR_POISON | RF4_BR_TIME | \
	 RF4_BR_ETHER | RF4_BR_SOUND | RF4_BR_NETHER | RF4_BR_GRAVITY | RF4_BR_RAD | \
	 RF4_BR_LIGHT | RF4_BR_DARK | RF4_CLOUD_RAD | RF4_CLOUD_POISON)

#define RF5_ATTACK_MASK \
	(RF5_BA_FIRE | RF5_BA_EARTH | RF5_BA_AIR | RF5_BA_WATER | RF5_BA_ELEC | \
	 RF5_BA_ICE | RF5_BA_ACID | RF5_BA_POISON | RF5_BA_TIME | \
	 RF5_BA_ETHER | RF5_BA_SOUND | RF5_BA_NETHER | RF5_BA_GRAVITY | \
	 RF5_BA_EMP | RF5_BA_RAD | RF5_BO_FIRE | RF5_BO_EARTH | RF5_BO_AIR | \
	 RF5_BO_WATER | RF5_BO_ELEC | RF5_BO_ICE | RF5_BO_ACID | RF5_BO_POISON | \
	 RF5_BO_TIME | RF5_BO_ETHER | RF5_BO_SOUND | RF5_BO_NETHER | RF5_BO_GRAVITY | \
	 RF5_BO_DARK)

#define RF6_ATTACK_MASK \
	(RF6_PSI |  RF6_DOMINATION | RF6_TK | RF6_FORCE | RF6_SPIRIT | \
	 RF6_ECTOPLASM)

#define RF7_ATTACK_MASK \
	(RF7_BE_FIRE | RF7_BE_ELEC | RF7_BE_WATER)
	
/*
 * Breath attacks.
 * Need special treatment in movement AI.
 */
#define RF4_BREATH_MASK \
	(RF4_BR_FIRE | RF4_BR_EARTH | RF4_BR_AIR | RF4_BR_WATER | \
	RF4_BR_ELEC | RF4_BR_ICE | RF4_BR_ACID | RF4_BR_POISON | \
	RF4_BR_TIME | RF4_BR_ETHER | RF4_BR_SOUND | RF4_BR_NETHER | \
	RF4_BR_GRAVITY | RF4_BR_RAD | RF4_BR_LIGHT | RF4_BR_DARK)

#define RF5_BREATH_MASK \
	(0L)

#define RF6_BREATH_MASK \
	(0L)

#define RF7_BREATH_MASK \
	(0L)

/*
 * Harassment (not direct damage) attacks.
 * Need special treatment in AI.
 */
#define RF4_HARASS_MASK \
        (RF4_SHRIEK)

#define RF5_HARASS_MASK \
	(0L)

#define RF6_HARASS_MASK \
	(RF6_DARKNESS | RF6_TRAPS | RF6_FORGET | RF6_FEAR | RF6_STUN | \
	 RF6_CONFUSION | RF6_BLIND | RF6_SLOW | RF6_HOLD | RF6_DRAIN_MANA)

#define RF7_HARASS_MASK \
	(0L)

/* Number of times harassment spells get special treatment */
#define BASE_HARASS 4
#define LOW_HARASS 2

/*
 * "Bolt" spells that may hurt fellow monsters
 */
#define RF4_BOLT_MASK \
	(RF4_ARROW | RF4_GUN | RF4_RIFLE | RF4_SHOTGUN | RF4_ROCKET | \
	 RF4_MISSILE)

#define RF5_BOLT_MASK \
	(RF5_BO_FIRE | RF5_BO_EARTH | RF5_BO_AIR | RF5_BO_WATER | \
	 RF5_BO_ELEC | RF5_BO_ICE | RF5_BO_ACID | RF5_BO_POISON | \
	 RF5_BO_TIME | RF5_BO_ETHER | RF5_BO_SOUND | RF5_BO_NETHER | \
	 RF5_BO_GRAVITY | RF5_BO_DARK)

#define RF6_BOLT_MASK \
	(0L)

#define RF7_BOLT_MASK \
	(0L)

/*
 * "Ball" spells that may be cast near the player if out of sight 
 */
#define RF4_BALL_MASK \
	(RF4_MISSILE | RF4_ROCKET)

#define RF5_BALL_MASK \
	(RF5_BA_FIRE | RF5_BA_EARTH | RF5_BA_AIR | RF5_BA_WATER | \
	 RF5_BA_ELEC | RF5_BA_ICE | RF5_BA_ACID | RF5_BA_POISON | \
	 RF5_BA_TIME | RF5_BA_ETHER | RF5_BA_SOUND | RF5_BA_NETHER | \
	 RF5_BA_GRAVITY | RF5_BA_EMP | RF5_BA_RAD)

#define RF6_BALL_MASK \
	(0L)

#define RF7_BALL_MASK \
	(0L)

/*
 * Basic Archery attacks
 * Need special treatment in AI.
 */
#define RF4_BASIC_ARCHERY_MASK \
        (RF4_ARROW | RF4_GUN | RF4_RIFLE | RF4_SHOTGUN)

#define RF5_BASIC_ARCHERY_MASK \
	(0L)

#define RF6_BASIC_ARCHERY_MASK \
	(0L)

#define RF7_BASIC_ARCHERY_MASK \
	(0L)

/*
 * Archery attacks
 * Need special treatment in AI.
 */
#define RF4_ARCHERY_MASK \
        (RF4_ARROW | RF4_GUN | RF4_RIFLE | RF4_SHOTGUN | RF4_ROCKET | RF4_MISSILE)

#define RF5_ARCHERY_MASK \
	(0L)

#define RF6_ARCHERY_MASK \
	(0L)

#define RF7_ARCHERY_MASK \
	(0L)

/*
 * Anti-magic attacks
 * Need special treatment in AI.
 */
#define RF4_ANTI_MAGIC_MASK \
	(RF4_ARROW | RF4_GUN | RF4_RIFLE | RF4_SHOTGUN | RF4_ROCKET | \
	RF4_MISSILE | RF4_BR_FIRE | RF4_BR_EARTH | RF4_BR_AIR | RF4_BR_WATER | \
	RF4_BR_ELEC | RF4_BR_ICE | RF4_BR_ACID | RF4_BR_POISON | \
	RF4_BR_TIME | RF4_BR_ETHER | RF4_BR_SOUND | RF4_BR_NETHER | \
	RF4_BR_GRAVITY | RF4_BR_RAD | RF4_BR_LIGHT | RF4_BR_DARK | RF4_CLOUD_RAD | \
	RF4_CLOUD_POISON)

#define RF5_ANTI_MAGIC_MASK \
	(0L)

#define RF6_ANTI_MAGIC_MASK \
	(0L)

#define RF7_ANTI_MAGIC_MASK \
	(0L)


/*
 * Spells that can be can cast without a player in sight
 * Need special treatment in AI.
 */
#define RF4_NO_PLAYER_MASK \
        (0L)

#define RF5_NO_PLAYER_MASK \
        (0L)

#define RF6_NO_PLAYER_MASK \
        (RF6_HEAL | RF6_ADD_MANA | RF6_TELE_SELF_TO | RF6_CURE)

#define RF7_NO_PLAYER_MASK \
        (0L)


/*** Option Definitions ***/

/*
 * Option indexes (offsets)
 *
 * These values are hard-coded by savefiles (and various pieces of code).
 */
#define OPT_BIRTH					128
#define OPT_CHEAT					160
#define OPT_ADULT					192
#define OPT_SCORE					224
#define OPT_MAX						256


/*
 * Option indexes (normal)
 *
 * These values are hard-coded by savefiles.
 */
#define OPT_rogue_like_commands		0
#define OPT_quick_messages			1
#define OPT_use_old_target			2
#define OPT_floor_query_flag		3
#define OPT_carry_query_flag		4
#define OPT_always_pickup			5
/* xxx old always_repeat */
#define OPT_depth_in_feet			7
/* xxx old stack_force_notes */
/* xxx old stack_force_costs	*/
#define OPT_show_labels				10
#define OPT_show_weights			11
#define OPT_show_choices			12
#define OPT_show_details			13
#define OPT_ring_bell				14
#define OPT_show_flavors			15
#define OPT_run_ignore_stairs		16
#define OPT_run_ignore_doors		17
#define OPT_run_cut_corners			18
#define OPT_run_use_corners			19
#define OPT_disturb_move			20
#define OPT_disturb_near			21
#define OPT_disturb_panel			22
#define OPT_disturb_state			23
#define OPT_disturb_minor			24
#define OPT_disturb_other			25
#define OPT_alert_hitpoint			26
#define OPT_alert_failure			27
#define OPT_verify_destroy			28
#define OPT_verify_special			29
#define OPT_allow_quantity			30
#define OPT_spell_book_select		31
#define OPT_auto_haggle				32
/* xxx old auto_scum */
#define OPT_menu_allowed		34
/* xxx testing_carry */
#define OPT_expand_look				36
#define OPT_expand_list				37
#define OPT_view_perma_grids		38
#define OPT_view_torch_grids		39
#define OPT_dungeon_align			40
#define OPT_dungeon_stair			41
/* xxx */
/* xxx */
/* xxx track_follow */
/* xxx track_target */
/* xxx */
#define OPT_smart_cheat				47
#define OPT_view_reduce_lite		48
#define OPT_hidden_player			49
#define OPT_avoid_abort				50
#define OPT_avoid_other				51
#define OPT_flush_failure			52
#define OPT_flush_disturb			53
/* xxx */
#define OPT_fresh_before			55
#define OPT_fresh_after				56
/* xxx */
#define OPT_compress_savefile		58
#define OPT_hilite_player			59
#define OPT_view_yellow_lite		60
#define OPT_view_bright_lite		61
#define OPT_view_granite_lite		62
#define OPT_view_special_lite		63
#define OPT_easy_open 				64
#define OPT_easy_alter 				65
#define OPT_easy_floor 				66
#define OPT_show_piles				67
#define OPT_center_player			68
#define OPT_run_avoid_center		69
#define OPT_scroll_target			70
#define OPT_auto_more				71
/* xxx */
/* xxx */
#define OPT_exp_need				74
#define OPT_verify_leave_quest		75
/* xxx */
/* xxx */
/* xxx */
/* xxx */
/* xxx xxx */
#define OPT_birth_preserve			(OPT_BIRTH+0)
#define OPT_birth_ironman			(OPT_BIRTH+1)
#define OPT_birth_no_stores			(OPT_BIRTH+2)
#define OPT_birth_no_artifacts		(OPT_BIRTH+3)
/* #define OPT_birth_rand_artifacts	(OPT_BIRTH+4) */
/* xxx xxx */
#define OPT_cheat_peek				(OPT_CHEAT+0)
#define OPT_cheat_hear				(OPT_CHEAT+1)
#define OPT_cheat_room				(OPT_CHEAT+2)
#define OPT_cheat_xtra				(OPT_CHEAT+3)
#define OPT_cheat_know				(OPT_CHEAT+4)
#define OPT_cheat_live				(OPT_CHEAT+5)
/* xxx xxx */
#define OPT_adult_preserve			(OPT_ADULT+0)
#define OPT_adult_ironman			(OPT_ADULT+1)
#define OPT_adult_no_stores			(OPT_ADULT+2)
#define OPT_adult_no_artifacts		(OPT_ADULT+3)
#define OPT_adult_rand_artifacts	(OPT_ADULT+4)
/* xxx xxx */
#define OPT_score_peek				(OPT_SCORE+0)
#define OPT_score_hear				(OPT_SCORE+1)
#define OPT_score_room				(OPT_SCORE+2)
#define OPT_score_xtra				(OPT_SCORE+3)
#define OPT_score_know				(OPT_SCORE+4)
#define OPT_score_live				(OPT_SCORE+5)
/* xxx xxx */


/*
 * Hack -- Option symbols
 */
#define rogue_like_commands		op_ptr->opt[OPT_rogue_like_commands]
#define quick_messages			op_ptr->opt[OPT_quick_messages]
#define use_old_target			op_ptr->opt[OPT_use_old_target]
#define floor_query_flag		op_ptr->opt[OPT_floor_query_flag]
#define carry_query_flag		op_ptr->opt[OPT_carry_query_flag]
#define always_pickup			op_ptr->opt[OPT_always_pickup]
/* xxx old always_repeat	*/
#define depth_in_feet			op_ptr->opt[OPT_depth_in_feet]
/* xxx old stack_force_notes */
/* xxx old stack_force_costs */
#define show_labels				op_ptr->opt[OPT_show_labels]
#define show_weights			op_ptr->opt[OPT_show_weights]
#define show_choices			op_ptr->opt[OPT_show_choices]
#define show_details			op_ptr->opt[OPT_show_details]
#define ring_bell				op_ptr->opt[OPT_ring_bell]
#define show_flavors			op_ptr->opt[OPT_show_flavors]
#define run_ignore_stairs		op_ptr->opt[OPT_run_ignore_stairs]
#define run_ignore_doors		op_ptr->opt[OPT_run_ignore_doors]
#define run_cut_corners			op_ptr->opt[OPT_run_cut_corners]
#define run_use_corners			op_ptr->opt[OPT_run_use_corners]
#define disturb_move			op_ptr->opt[OPT_disturb_move]
#define disturb_near			op_ptr->opt[OPT_disturb_near]
#define disturb_panel			op_ptr->opt[OPT_disturb_panel]
#define disturb_state			op_ptr->opt[OPT_disturb_state]
#define disturb_minor			op_ptr->opt[OPT_disturb_minor]
#define disturb_other			op_ptr->opt[OPT_disturb_other]
#define alert_hitpoint			op_ptr->opt[OPT_alert_hitpoint]
#define alert_failure			op_ptr->opt[OPT_alert_failure]
#define verify_destroy			op_ptr->opt[OPT_verify_destroy]
#define verify_special			op_ptr->opt[OPT_verify_special]
#define allow_quantity			op_ptr->opt[OPT_allow_quantity]
#define spell_book_select		op_ptr->opt[OPT_spell_book_select]
#define auto_haggle				op_ptr->opt[OPT_auto_haggle]
/* xxx old auto_scum */
#define menu_allowed		op_ptr->opt[OPT_menu_allowed]
/* xxx testing_carry */
#define expand_look				op_ptr->opt[OPT_expand_look]
#define expand_list				op_ptr->opt[OPT_expand_list]
#define view_perma_grids		op_ptr->opt[OPT_view_perma_grids]
#define view_torch_grids		op_ptr->opt[OPT_view_torch_grids]
#define dungeon_align			op_ptr->opt[OPT_dungeon_align]
#define dungeon_stair			op_ptr->opt[OPT_dungeon_stair]
/* xxx */
/* xxx */
/* xxx track_follow */
/* xxx track_target */
/* xxx */
#define smart_cheat				op_ptr->opt[OPT_smart_cheat]
#define view_reduce_lite		op_ptr->opt[OPT_view_reduce_lite]
#define hidden_player			op_ptr->opt[OPT_hidden_player]
#define avoid_abort				op_ptr->opt[OPT_avoid_abort]
#define avoid_other				op_ptr->opt[OPT_avoid_other]
#define flush_failure			op_ptr->opt[OPT_flush_failure]
#define flush_disturb			op_ptr->opt[OPT_flush_disturb]
/* xxx */
#define fresh_before			op_ptr->opt[OPT_fresh_before]
#define fresh_after				op_ptr->opt[OPT_fresh_after]
/* xxx */
#define compress_savefile		op_ptr->opt[OPT_compress_savefile]
#define hilite_player			op_ptr->opt[OPT_hilite_player]
#define view_yellow_lite		op_ptr->opt[OPT_view_yellow_lite]
#define view_bright_lite		op_ptr->opt[OPT_view_bright_lite]
#define view_granite_lite		op_ptr->opt[OPT_view_granite_lite]
#define view_special_lite		op_ptr->opt[OPT_view_special_lite]
#define easy_open				op_ptr->opt[OPT_easy_open]
#define easy_alter				op_ptr->opt[OPT_easy_alter]
#define easy_floor				op_ptr->opt[OPT_easy_floor]
#define show_piles				op_ptr->opt[OPT_show_piles]
#define center_player			op_ptr->opt[OPT_center_player]
#define run_avoid_center		op_ptr->opt[OPT_run_avoid_center]
#define scroll_target			op_ptr->opt[OPT_scroll_target]
#define auto_more				op_ptr->opt[OPT_auto_more]
/* xxx */
/* xxx */
#define exp_need				op_ptr->opt[OPT_exp_need]
#define verify_leave_quest		op_ptr->opt[OPT_verify_leave_quest]
/* xxx */
/* xxx */
/* xxx */
/* xxx */
/* xxx xxx */
#define birth_preserve			op_ptr->opt[OPT_birth_preserve]
#define birth_ironman			op_ptr->opt[OPT_birth_ironman]
#define birth_no_stores			op_ptr->opt[OPT_birth_no_stores]
#define birth_no_artifacts		op_ptr->opt[OPT_birth_no_artifacts]
#define birth_rand_artifacts	op_ptr->opt[OPT_birth_rand_artifacts]
/* xxx xxx */
#define cheat_peek				op_ptr->opt[OPT_cheat_peek]
#define cheat_hear				op_ptr->opt[OPT_cheat_hear]
#define cheat_room				op_ptr->opt[OPT_cheat_room]
#define cheat_xtra				op_ptr->opt[OPT_cheat_xtra]
#define cheat_know				op_ptr->opt[OPT_cheat_know]
#define cheat_live				op_ptr->opt[OPT_cheat_live]
/* xxx xxx */
#define adult_preserve			op_ptr->opt[OPT_adult_preserve]
#define adult_ironman			op_ptr->opt[OPT_adult_ironman]
#define adult_no_stores			op_ptr->opt[OPT_adult_no_stores]
#define adult_no_artifacts		op_ptr->opt[OPT_adult_no_artifacts]
#define adult_rand_artifacts	op_ptr->opt[OPT_adult_rand_artifacts]
/* xxx xxx */
#define score_peek				op_ptr->opt[OPT_score_peek]
#define score_hear				op_ptr->opt[OPT_score_hear]
#define score_room				op_ptr->opt[OPT_score_room]
#define score_xtra				op_ptr->opt[OPT_score_xtra]
#define score_know				op_ptr->opt[OPT_score_know]
#define score_live				op_ptr->opt[OPT_score_live]
/* xxx xxx */


/*
 * Information for "do_cmd_options()".
 */
#define OPT_PAGE_MAX				6
#define OPT_PAGE_PER				20



/*** Macro Definitions ***/

/*
 * Monster macros
 */

/*
 * Determine if a given monster is "non-living"
 *
 * Neither demons nor angels are alive.  Neither vortexes nor elementals
 * are alive.  Storms and events are not alive.  Creatures of earth that
 * are not alive use the symbol '#'; those that are use 'X'.
 *
 * An armour or weapon mimic is assumed to be "animated", and therefore
 * not alive.  All other mimics are "mimics", living creatures that look
 * like something non-living.
 */

#define monster_nonliving(M) \
	(((M)->flags3 & (RF3_DEMON))  || \
	 ((M)->flags3 & (RF3_UNDEAD)) || \
	 ((M)->flags3 & (RF3_AUTOMATA)) || \
	 ((M)->flags3 & (RF3_CONSTRUCT)) || \
	 (strchr("aEvgCD", (M)->d_char)))

#define monster_automata(M) \
	(((M)->flags3 & (RF3_AUTOMATA))  || \
	 ((M)->flags3 & (RF3_CONSTRUCT)) || \
	 (strchr("aC", (M)->d_char)))

#define monster_elemental(M) \
	(((M)->flags3 & (RF3_ELEMENTAL))  || \
	 (strchr("E", (M)->d_char)))


/*
 * Determine if the monster is fully visible.
 */
#define mon_fully_visible(M) \
(((M)->ml) && !((M)->mflag & (MFLAG_MIME | MFLAG_DLIM)))


/*
 * Hack -- The main "screen"
 */
#define term_screen	(angband_term[0])


/*
 * Determine if a given inventory item is "aware"
 */
#define object_aware_p(T) \
	(k_info[(T)->k_idx].aware)

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(T) \
	(k_info[(T)->k_idx].tried)


/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 */
#define object_known_p(T) \
	(((T)->ident & (IDENT_KNOWN)) || \
	 ((k_info[(T)->k_idx].flags3 & (TR3_EASY_KNOW)) && \
	  k_info[(T)->k_idx].aware))


/*
 * Return the "attr" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_attr(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_attr[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_attr))

/*
 * Return the "char" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_char(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_char[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_char))


/*
 * Artifacts use the "name1" field
 */
#define artifact_p(T) \
	((T)->name1 ? TRUE : FALSE)

/*
 * Ego-Items use the "name2" field
 */
#define ego_item_p(T) \
	((T)->name2 ? TRUE : FALSE)


/*
 * Broken items.
 */
#define broken_p(T) \
	((T)->ident & (IDENT_BROKEN))

/*
 * Cursed items.
 */
#define cursed_p(T) \
	((T)->ident & (IDENT_CURSED))


/*
 * Convert an "attr"/"char" pair into a "pict" (P)
 */
#define PICT(A,C) \
	((((u16b)(A)) << 8) | ((byte)(C)))

/*
 * Convert a "pict" (P) into an "attr" (A)
 */
#define PICT_A(P) \
	((byte)((P) >> 8))

/*
 * Convert a "pict" (P) into an "char" (C)
 */
#define PICT_C(P) \
	((char)((byte)(P)))


/*
 * Convert a "location" (Y,X) into a "grid" (G)
 */
#define GRID(Y,X) \
	(256 * (Y) + (X))

/*
 * Convert a "grid into a "location" (Y)
 */
#define GRID_Y(G) \
	((int)((G) / 256U))

/*
 * Convert a "grid" (G) into a "location" (X)
 */
#define GRID_X(G) \
	((int)((G) % 256U))


/*
 * Determines if a map location is "meaningful"
 */
#define in_bounds(Y,X) \
	(((unsigned)(Y) < (unsigned)(DUNGEON_HGT)) && \
	 ((unsigned)(X) < (unsigned)(DUNGEON_WID)))

/*
 * Determines if a map location is fully inside the outer walls
 * This is more than twice as expensive as "in_bounds()", but
 * often we need to exclude the outer walls from calculations.
 */
#define in_bounds_fully(Y,X) \
	(((Y) > 0) && ((Y) < DUNGEON_HGT-1) && \
	 ((X) > 0) && ((X) < DUNGEON_WID-1))


/*
 * Determines if a map location is currently "on screen"
 * Note that "panel_contains(Y,X)" always implies "in_bounds(Y,X)".
 * Pre-storing this into a cave_info flag would be nice.  XXX XXX
 */
#define panel_contains(Y,X) \
	(((unsigned)((Y) - p_ptr->wy) < (unsigned)(SCREEN_HGT)) && \
	 ((unsigned)((X) - p_ptr->wx) < (unsigned)(SCREEN_WID)))



/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note the use of the new "CAVE_WALL" flag.
 */
#define cave_floor_bold(Y,X) \
	(!(cave_info[Y][X] & (CAVE_WALL)))
	
	
/*
 * Determine if a "legal" grid is able to be passed through by creatures
 * that cannot bore or pass through walls.  This new definition is needed
 * because some terrain can now be traversed, but ends LOS.  -LM-
 *
 * Line 1 -- forbid doors, seams, walls, etc.
 * Line 2 -- but allow trees
 * Line 3 -- but allow rubble
 *
 * Note the use of the new "CAVE_WALL" flag.
 */
#define cave_passable_bold(Y,X) \
	(!(cave_info[Y][X] & (CAVE_WALL)))
/*	(cave_feat[Y][X] == FEAT_TREE) || \  */
/*	(cave_feat[Y][X] == FEAT_RUBBLE))	 */


/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 */
#define cave_clean_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid player/monsters
 */
#define cave_empty_bold(Y,X) \
	(cave_floor_bold(Y,X) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid player/monsters
 */
#define cave_naked_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is a "shop" grid
 */
#define cave_shop_bold(Y,X) \
	 ((cave_feat[Y][X] >= FEAT_SHOP_HEAD) && \
	  (cave_feat[Y][X] <= FEAT_SHOP_TAIL))
/*
 * Determine if a "legal" grid is a closed door.
 * Open or broken doors don't count.
 */
#define cave_closed_door(Y,X) \
   (((cave_feat[Y][X] >= FEAT_DOOR_HEAD) && \
     (cave_feat[Y][X] <= FEAT_DOOR_TAIL)) || \
     (cave_feat[Y][X] == FEAT_SECRET))



/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1 -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- shop doors
 */
#define cave_perma_bold(Y,X) \
	((cave_feat[Y][X] >= FEAT_PERM_EXTRA) || \
	 ((cave_feat[Y][X] == FEAT_LESS) || \
	  (cave_feat[Y][X] == FEAT_MORE)) || \
	 ((cave_feat[Y][X] >= FEAT_SHOP_HEAD) && \
	  (cave_feat[Y][X] <= FEAT_SHOP_TAIL)))


/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_VIEW)) != 0)


/*
 * Determine if a "legal" grid can be "seen" by the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_can_see_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_SEEN)) != 0)


/*
 * Determine if a "legal" grid is within "line of fire" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_can_fire_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_FIRE)) != 0)


/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif



/*** Color constants ***/


/*
 * Angband "attributes" (with symbols, and base (R,G,B) codes)
 *
 * The "(R,G,B)" codes are given in "fourths" of the "maximal" value,
 * and should "gamma corrected" on most (non-Macintosh) machines.
 */
#define TERM_DARK		0	/* 'd' */	/* 0,0,0 */
#define TERM_WHITE		1	/* 'w' */	/* 4,4,4 */
#define TERM_SLATE		2	/* 's' */	/* 2,2,2 */
#define TERM_ORANGE		3	/* 'o' */	/* 4,2,0 */
#define TERM_RED		4	/* 'r' */	/* 3,0,0 */
#define TERM_GREEN		5	/* 'g' */	/* 0,2,1 */
#define TERM_BLUE		6	/* 'b' */	/* 0,0,4 */
#define TERM_UMBER		7	/* 'u' */	/* 2,1,0 */
#define TERM_L_DARK		8	/* 'D' */	/* 1,1,1 */
#define TERM_L_WHITE	9	/* 'W' */	/* 3,3,3 */
#define TERM_VIOLET		10	/* 'v' */	/* 4,0,4 */
#define TERM_YELLOW		11	/* 'y' */	/* 4,4,0 */
#define TERM_L_RED		12	/* 'R' */	/* 4,0,0 */
#define TERM_L_GREEN	13	/* 'G' */	/* 0,4,0 */
#define TERM_L_BLUE		14	/* 'B' */	/* 0,4,4 */
#define TERM_L_UMBER	15	/* 'U' */	/* 3,2,1 */

/*
 * Maximum number of colours, and number of "basic" Angband colours
 */ 
#define MAX_COLORS		256
#define BASIC_COLORS	16


#define MSG_GENERIC			0
#define MSG_HIT				1
#define MSG_MISS			2
#define MSG_FLEE			3
#define MSG_DROP			4
#define MSG_KILL			5
#define MSG_LEVEL			6
#define MSG_DEATH			7
#define MSG_STUDY			8
#define MSG_TELEPORT		9
#define MSG_SHOOT			10
#define MSG_QUAFF			11
#define MSG_ZAP				12
#define MSG_WALK			13
#define MSG_TPOTHER			14
#define MSG_HITWALL			15
#define MSG_EAT				16
#define MSG_STORE1			17
#define MSG_STORE2			18
#define MSG_STORE3			19
#define MSG_STORE4			20
#define MSG_DIG				21
#define MSG_OPENDOOR		22
#define MSG_SHUTDOOR		23
#define MSG_TPLEVEL			24
#define MSG_BELL			25
#define MSG_NOTHING_TO_OPEN	26
#define MSG_LOCKPICK_FAIL	27
#define MSG_STAIRS			28
#define MSG_HITPOINT_WARN	29

#define MSG_MAX             30


/*** Sound constants ***/


/*
 * Mega-Hack -- some primitive sound support (see "main-win.c")
 *
 * Some "sound" constants for "Term_xtra(TERM_XTRA_SOUND, val)"
 */
#define SOUND_HIT		1
#define SOUND_MISS		2
#define SOUND_FLEE		3
#define SOUND_DROP		4
#define SOUND_KILL		5
#define SOUND_LEVEL		6
#define SOUND_DEATH		7
#define SOUND_STUDY		8
#define SOUND_TELEPORT	9
#define SOUND_SHOOT		10
#define SOUND_QUAFF		11
#define SOUND_ZAP		12
#define SOUND_WALK		13
#define SOUND_TPOTHER	14
#define SOUND_HITWALL	15
#define SOUND_EAT		16
#define SOUND_STORE1	17
#define SOUND_STORE2	18
#define SOUND_STORE3	19
#define SOUND_STORE4	20
#define SOUND_DIG		21
#define SOUND_OPENDOOR	22
#define SOUND_SHUTDOOR	23
#define SOUND_TPLEVEL	24

/*
 * Mega-Hack -- maximum known sounds
 *
 * Should be the same as MSG_MAX for compatibility reasons.
 */
#define SOUND_MAX MSG_MAX



/*** Hack ***/


/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX	128
# undef QUARK_MAX
# define QUARK_MAX	128
# undef MESSAGE_MAX
# define MESSAGE_MAX	128
# undef MESSAGE_BUF
# define MESSAGE_BUF	4096
#endif


/*
 * List of commands that will be auto-repeated
 *
 * ToDo: This string should be user-configurable.
 */
#define AUTO_REPEAT_COMMANDS "TBDoc+"



/*
 * HACK - define if the source contains the cleanup_angband() function.
 */
#define HAS_CLEANUP


/*
 * Indexes for various spells 
 */
/* Liber Al Vel Legis (sval 0) */ 
#define POW_AIM_OF_THE_WILL				1
#define POW_SENSE_WILL					2
#define POW_ASTRAL_GATE					3
#define POW_INNER_RAD					4
#define POW_DEMONIC_WILL				5
#define POW_LO_OBJECT		 			6
#define POW_LO_TRAPS					7
#define POW_PLAGUE_WILL					8
#define POW_0_XXX9						9
#define POW_0_XXX10						10
/* The Zohar (Book of Splendor) (sval 1) */
#define POW_RECHARGE					11
#define POW_SUPPRESSION_WILL			12
#define POW_IDENTIFY					13
#define POW_FIRE_BOLT					14
#define POW_FROST_BOLT					15
#define POW_TELEPORT_OTHER_I			16
#define POW_HASTE						17
#define POW_FIREBALL					18
#define POW_GENOCIDE					19
#define POW_1_XXX10						20
/* Sepher Yetzirah (Book of Formation) (sval 2) */
#define POW_ACID_BOLT					21
#define POW_LIGHTNING_BOLT				22
#define POW_CLOUD_KILL					23
#define POW_ICE_STORM					24
#define POW_FIRE_STORM					25
#define POW_METEOR_STORM				26
#define POW_ELEMENTAL_BALL				27
#define POW_SOUL_STORM					28
#define POW_2_XXX1						29
#define POW_2_XXX2						30
/* De Vermis Mysteriis (Mysteries of the Worm) (sval 3) */
#define POW_RECHARGE_II					31
#define POW_EARTHQUAKE_I				32
#define POW_WORD_OF_RECALL_I			33
#define POW_MIND_OF_WORM				34
#define POW_MASS_GENOCIDE				35
#define POW_3_XXX1						36
#define POW_3_XXX2						37
#define POW_3_XXX3						38
#define POW_3_XXX4						39
#define POW_3_XXX5						40
/* Cthaat Aquadingen (sval 4) */
#define POW_SUMMON_DEMON				41
#define POW_VOORISH_SIGN				42
#define POW_BYAKHEE_WINDS				43
#define POW_FAUGN_BARRIER				44
#define POW_BANISH_DEMON				45
#define POW_SUMMON_DEMON_II				46
#define POW_LAMP_ALHAZRED				47
#define POW_4_XXX8						48
#define POW_4_XXX9						49
#define POW_4_XXX10						50
/* Othuum Omnicia (sval 5) */
#define POW_CONTACT_YITHIAN				51
#define POW_INCANT_MI_GO				52
#define POW_CONSUME_FLESH				53
#define POW_MELT_STONE					54
#define POW_CHIME_TEZCH					55
#define POW_MIRROR_ATEP					56
#define POW_GATE						57
#define POW_EFFIGY_HATE					58
#define POW_CONTACT_NYAR				59
#define POW_5_XXX10						60
/* Revelations of Glaaki (sval 6) */
#define POW_DEMON_COURAGE				61
#define POW_DEMON_FURY					62
#define POW_DEMONIC_VIGOR				63
#define POW_DEMON_SHIELD				64
#define POW_STYGIAN_WAR					65
#define POW_6_XXX6						66
#define POW_6_XXX7						67
#define POW_6_XXX8						68
#define POW_6_XXX9						69
#define POW_6_XXX10						70
/* Book name (sval 7) */
#define POW_7_XXX1						71
#define POW_7_XXX2						72
#define POW_7_XXX3						73
#define POW_7_XXX4						74
#define POW_7_XXX5						75
#define POW_7_XXX6						76
#define POW_7_XXX7						77
#define POW_7_XXX8						78
#define POW_7_XXX9						79
#define POW_7_XXX10						80
/* Book name (sval 8) */
#define POW_8_XXX1						81
#define POW_8_XXX2						82
#define POW_8_XXX3						83
#define POW_8_XXX4						84
#define POW_8_XXX5						85
#define POW_8_XXX6						86
#define POW_8_XXX7						87
#define POW_8_XXX8						88
#define POW_8_XXX9						89
#define POW_8_XXX10						90
/* Book name (sval 9) */
#define POW_9_XXX1						91
#define POW_9_XXX2						92
#define POW_9_XXX3						93
#define POW_9_XXX4						94
#define POW_9_XXX5						95
#define POW_9_XXX6						96
#define POW_9_XXX7						97
#define POW_9_XXX8						98
#define POW_9_XXX9						99
#define POW_9_XXX10						100
/* Treatise on the Resurrection (sval 10) */
#define POW_CHANT						101
#define POW_SANCTUARY					102
#define POW_HEALING_I					103
#define POW_PROTECTION_FROM_EVIL		104
#define POW_HEALING_II					105
#define POW_REMOVE_CURSE				106
#define POW_TURN_UNDEAD					107
#define POW_HEALING_III					108
#define POW_DESTROY_MACHINE				109
#define POW_HOLY_BOLT 					110
/* Odes of Solomon (sval 11) */
#define POW_PORTAL						111
#define POW_SENSE_INVISIBLE				112
#define POW_SENSE_SURROUNDINGS			113
#define POW_SATISFY_HUNGER				114
#define POW_PRAYER						115
#define POW_DISPEL_EVIL					116
#define POW_IDENTIFY_II					117
#define POW_HOLY_WORD					118
#define POW_HEALING_IV					119
#define POW_RESTORATION					120
/* The Pnakotic Manuscripts (sval 12) */
#define POW_DISPEL_CURSE				121
#define POW_BANISHMENT					122
#define POW_RECHARGE_III				123
#define POW_DISPEL_EVIL_II				124
#define POW_WORD_OF_RECALL_II			125
#define POW_RESISTANCE					126
#define POW_12_XXX7						127
#define POW_12_XXX8						128
#define POW_12_XXX9						129
#define POW_12_XXX10					130
/* Khorda Avesta (sval 13) */
#define POW_HEAL_CUTS					131
#define POW_MINOR_RESISTANCE			132
#define POW_REMOVE_FEAR_II 				133
#define POW_MUSCLE_BUFF					134
#define POW_SHATTER						135
#define POW_NO_TELEPORT					136
#define POW_VIGOR_BUFF				137
#define POW_STONE_MELD				138
#define POW_13_XXX9						139
#define POW_13_XXX10					140
/* Trimorphic Protennoia (Nag Hammadi)  (sval 14) */
#define POW_FREE_ACT					141
#define POW_DIVINE_FAVOR			142
#define POW_FLAMING_WRATH			143
#define POW_ANTI_MAGIC				144
#define POW_HOLY_STRIKE				145
#define POW_14_XXX6						146
#define POW_14_XXX7						147
#define POW_14_XXX8						148
#define POW_14_XXX9						149
#define POW_14_XXX10					150
/* The Corpus Hermeticum (sval 15) */
#define POW_DANCING_LIGHTS				151
#define POW_SACRED_SERMON				152
#define POW_MANIFEST_GOD				153
#define POW_THOUGHT_SENSE				154
#define POW_KEY							155
#define POW_15_XXX6						156
#define POW_15_XXX7						157
#define POW_15_XXX8						158
#define POW_15_XXX9						159
#define POW_15_XXX10					160
/* Book name (sval 16) */
#define POW_16_XXX1						161
#define POW_16_XXX2						162
#define POW_16_XXX3						163
#define POW_16_XXX4						164
#define POW_16_XXX5						165
#define POW_16_XXX6						166
#define POW_16_XXX7						167
#define POW_16_XXX8						168
#define POW_16_XXX9						169
#define POW_16_XXX10					170
/* Book name (sval 17) */
#define POW_17_XXX1						171
#define POW_17_XXX2						172
#define POW_17_XXX3						173
#define POW_17_XXX4						174
#define POW_17_XXX5						175
#define POW_17_XXX6						176
#define POW_17_XXX7						177
#define POW_17_XXX8						178
#define POW_17_XXX9						179
#define POW_17_XXX10					180
/* Utility knife (sval 18) */
#define POW_CALL_LIGHT					181
#define POW_REMOVE_FEAR					182
#define POW_HEALING_VI					183
#define POW_DETECT_DOOR_STAIR			184
#define POW_DETECT_TRAPS				185
#define POW_SLOW_POISON					186
#define POW_SPRING_BLADE				187
#define POW_NOURISHMENT					188
#define POW_OBJECT_ANALYSIS				189
#define POW_FETCH						190
/* Detective's Kit  (sval 19) */
#define POW_DETECT_HOSTILE				191
#define POW_DETECT_TRAPS_DOORS			192
#define POW_TREASURE_DETECTION			193
#define POW_DETECT_ENCHANTMENT			194
#define POW_DETECTION					195
#define POW_PERCEPTION					196
#define POW_PROBEING					197
#define POW_CLARIVOYANCE				198
#define POW_IDENTIFY_III				199
#define POW_19_XXX1						200				
/* Clockwork Chassis (sval 20)*/
#define POW_SPEAR_OF_LIGHT				201
#define POW_ETHERIC_JUMP				202
#define POW_DEFENSIVE_ARRAY				203
#define POW_NEUTRALIZE_POISON			204
#define POW_GUNS						205
#define POW_HEALING_VII					206
#define POW_TURN_STONE_TO_MUD			207
#define POW_EARTHQUAKE_II				208
#define POW_MISSILE						209
#define POW_EMP							210
/* Clockwork carbine (sval 21) */
#define POW_LEAD_SLUGS					211
#define POW_LIGHTNING_RAY				212
#define POW_FROST_RAY					213
#define POW_HEAT_RAY					214
#define POW_GRAVITY_RAY					215
#define POW_TELEPORT_OTHER_II			216
#define POW_21_XXX1						217
#define POW_21_XXX2						218
#define POW_21_XXX3						219
#define POW_21_XXX4						220
/* Velocipede (sval 22) */
#define POW_BLINK						221
#define POW_TELEPORT_SELF				222
#define POW_TELEPORT_OTHER_III			223
#define POW_TELEPORT_LEVEL				224
#define POW_WORD_OF_RECALL_III			225
#define POW_22_XXX1						226
#define POW_22_XXX2						227
#define POW_22_XXX3						228
#define POW_22_XXX4						229
#define POW_22_XXX5						230
/* The Analytic Engine (sval 23) */
#define POW_HEALING_VIII				231
#define POW_BIOLOGICAL_ENHANCE			232
#define POW_POLYMORPH_OTHER				233
#define POW_RECHARGE_IV					234
#define POW_DOOR_CREATION				235
#define POW_STAIR_CREATION				236
#define POW_BIOLOGICAL_ENHANCE_II		237
#define POW_HEALING_IX					238
#define POW_ALTER_REALITY				239
#define POW_23_XXX1						240
/* Book name (sval 24) */
#define POW_24_XXX1						241
#define POW_24_XXX2						242
#define POW_24_XXX3						243
#define POW_24_XXX4						244
#define POW_24_XXX5						245
#define POW_24_XXX6						246
#define POW_24_XXX7						247
#define POW_24_XXX8						248
#define POW_24_XXX9						249
#define POW_24_XXX10					250
/* Book name (sval 25) */
#define POW_25_XXX1						251
#define POW_25_XXX2						252
#define POW_25_XXX3						253
#define POW_25_XXX4						254
#define POW_25_XXX5						255
#define POW_25_XXX6						256
#define POW_25_XXX7						257
#define POW_25_XXX8						258
#define POW_25_XXX9						259
#define POW_25_XXX10					260
/* Book name (sval 26) */
#define POW_26_XXX1						261
#define POW_26_XXX2						262
#define POW_26_XXX3						263
#define POW_26_XXX4						264
#define POW_26_XXX5						265
#define POW_26_XXX6						266
#define POW_26_XXX7						267
#define POW_26_XXX8						268
#define POW_26_XXX9						269
#define POW_26_XXX10					270
/* Book name (sval 27) */
#define POW_27_XXX1						271
#define POW_27_XXX2						272
#define POW_27_XXX3						273
#define POW_27_XXX4						274
#define POW_27_XXX5						275
#define POW_27_XXX6						276
#define POW_27_XXX7						277
#define POW_27_XXX8						278
#define POW_27_XXX9						279
#define POW_27_XXX10					280

/* Total number of powers in the game + 1 */
#define POW_MAX					280
